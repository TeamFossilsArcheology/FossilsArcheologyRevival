buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "CurseForge"
            url = "https://minecraft.curseforge.com/api/maven/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

def mod_file = getModFile()
version = getModField("VERSION", mod_file)
def llibrary_version = getModField("LLIBRARY_VERSION", mod_file)
group = "fossilsarcheology"
archivesBaseName = "fossilsarcheology"
sourceCompatibility = targetCompatibility = "1.8"

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "minecraft"
    mappings = "stable_39"
}

repositories {
    mavenCentral()
    maven {
        url = "https://maven.mcmoddev.com"
    }
    maven {
        name = "Mobius Repo"
        url = "http://tehnut.info/maven"
    }
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "gegy1000"
        url = "https://maven.gegy1000.net"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
            name = 'DVS1 Maven FS'
        url = 'http://dvs1.progwml6.com/files/maven'
    }

    maven {
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    deobfCompile "net.ilexiconn:llibrary:1.7.17-1.12.2"
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.25-B40_1.12"
    deobfCompile "slimeknights.mantle:Mantle:1.12-1.3.3.55"
    deobfCompile "slimeknights:TConstruct:1.12.2-2.12.0.135"
    runtime "mezz.jei:jei_1.12.2:4.9.1.181"
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_1.12.2:4.9.1.181:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_1.12.2:4.15.0.280"
    compile "thaumcraft:Thaumcraft:1.12.2:6.1.BETA26"
    compile "baubles:Baubles:1.12:1.5.2"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "llibrary_version", llibrary_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version, "llibrary_version": llibrary_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    manifest {
        attributes "FMLAT": "fossil_at.cfg"
    }
}

task devJar(type: Jar) {
    classifier = "dev"
    from sourceSets.main.output
    manifest {
        attributes "FMLAT": "fossil_at.cfg"
    }
}

String getModFile() {
    String path = ""
    FileTree tree = fileTree(dir: 'src/main/java')
    tree.include '**/*.java'
    tree.visit { element ->
        if (element.file.isFile()) {
            element.file.eachLine { String s ->
                s = s.trim()
                if (s.matches("@Mod\\s*\\(.*")) {
                    path = "src/main/java/$element.relativePath"
                }
            }
        }
    }
    return path
}

String getModField(String type, String mod_file) {
    if (mod_file.length() == 0) {
        return ""
    }
    String field = ""
    String prefix = "public static final String $type = \""
    File file = file(mod_file)
    file.eachLine { String s ->
        s = s.trim()
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 2)
            field = s
        }
    }
    return field
}


