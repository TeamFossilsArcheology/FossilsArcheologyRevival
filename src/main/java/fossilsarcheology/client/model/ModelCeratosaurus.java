package fossilsarcheology.client.model;


import fossilsarcheology.server.entity.prehistoric.EntityCeratosaurus;
import fossilsarcheology.server.entity.prehistoric.EntityPrehistoric;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelCeratosaurus extends ModelPrehistoric {
	public final AdvancedModelRenderer leftThigh;
	public final AdvancedModelRenderer rightThigh;
	public final AdvancedModelRenderer lowerBody;
	public final AdvancedModelRenderer leftLeg;
	public final AdvancedModelRenderer leftFoot;
	public final AdvancedModelRenderer rightLeg;
	public final AdvancedModelRenderer rightFoot;
	public final AdvancedModelRenderer upperBody;
	public final AdvancedModelRenderer tail1;
	public final AdvancedModelRenderer leftUpperArm;
	public final AdvancedModelRenderer rightUpperArm;
	public final AdvancedModelRenderer neck;
	public final AdvancedModelRenderer leftLowerArm;
	public final AdvancedModelRenderer rightLowerArm;
	public final AdvancedModelRenderer head;
	public final AdvancedModelRenderer headPivot;
	public final AdvancedModelRenderer upperJaw;
	public final AdvancedModelRenderer lowerJaw;
	public final AdvancedModelRenderer rightHorn;
	public final AdvancedModelRenderer leftHorn;
	public final AdvancedModelRenderer frontNasalCrest;
	public final AdvancedModelRenderer backNasalCrest;
	public final AdvancedModelRenderer tail2;
	public final AdvancedModelRenderer tail3;
	private final ModelAnimator animator;

	public ModelCeratosaurus() {
		this.textureWidth = 128;
		this.textureHeight = 64;
		this.tail3 = new AdvancedModelRenderer(this, 28, 5);
		this.tail3.setRotationPoint(0.0F, 0.8F, 9.0F);
		this.tail3.addBox(-2.0F, 0.0F, 0.0F, 4, 4, 10, 0.0F);
		ModelUtils.setRotateAngle(tail3, -0.10471975511965977F, -0.0F, 0.0F);
		this.leftLowerArm = new AdvancedModelRenderer(this, 20, 25);
		this.leftLowerArm.setRotationPoint(0.9F, 1.5F, 0.0F);
		this.leftLowerArm.addBox(-1.0F, 0.0F, 0.0F, 2, 4, 2, 0.0F);
		ModelUtils.setRotateAngle(leftLowerArm, -0.7391469382195985F, -0.0F, 0.0F);
		this.leftThigh = new AdvancedModelRenderer(this, 0, 17);
		this.leftThigh.mirror = true;
		this.leftThigh.setRotationPoint(4.0F, 7.8F, 7.5F);
		this.leftThigh.addBox(0.0F, -1.0F, -3.0F, 4, 9, 6, 0.0F);
		this.leftUpperArm = new AdvancedModelRenderer(this, 20, 18);
		this.leftUpperArm.setRotationPoint(4.0F, 3.5F, -11.2F);
		this.leftUpperArm.addBox(0.0F, -1.0F, -1.0F, 2, 4, 2, 0.0F);
		ModelUtils.setRotateAngle(leftUpperArm, 0.3633775502652194F, -0.0F, 0.0F);
		this.rightLowerArm = new AdvancedModelRenderer(this, 20, 25);
		this.rightLowerArm.mirror = true;
		this.rightLowerArm.setRotationPoint(-0.9F, 1.5F, 0.0F);
		this.rightLowerArm.addBox(-1.0F, 0.0F, 0.0F, 2, 4, 2, 0.0F);
		ModelUtils.setRotateAngle(rightLowerArm, -0.7391469382195985F, -0.0F, 0.0F);
		this.rightHorn = new AdvancedModelRenderer(this, 47, 46);
		this.rightHorn.setRotationPoint(-2.2F, -2.9F, -4.6F);
		this.rightHorn.addBox(0.0F, -2.0F, -1.0F, 1, 3, 2, 0.0F);
		ModelUtils.setRotateAngle(rightHorn, 0.24644049038159932F, -0.239459173373622F, -0.4242895411598215F);
		this.tail2 = new AdvancedModelRenderer(this, 49, 12);
		this.tail2.setRotationPoint(0.0F, 0.3F, 8.3F);
		this.tail2.addBox(-2.5F, 0.0F, 0.0F, 5, 6, 9, 0.0F);
		ModelUtils.setRotateAngle(tail2, 0.06981317007977318F, 0.0F, 0.0F);
		this.rightFoot = new AdvancedModelRenderer(this, 10, 9);
		this.rightFoot.setRotationPoint(0.1F, 9.4F, 0.5F);
		this.rightFoot.addBox(-2.0F, 0.0F, -5.0F, 3, 2, 6, 0.0F);
		ModelUtils.setRotateAngle(rightFoot, 0.2617993877991494F, -0.0F, 0.0F);
		this.leftHorn = new AdvancedModelRenderer(this, 47, 46);
		this.leftHorn.setRotationPoint(2.2F, -2.9F, -4.6F);
		this.leftHorn.addBox(-1.0F, -2.0F, -1.0F, 1, 3, 2, 0.0F);
		ModelUtils.setRotateAngle(leftHorn, 0.24644049038159932F, 0.239459173373622F, 0.4242895411598215F);
		this.rightThigh = new AdvancedModelRenderer(this, 0, 17);
		this.rightThigh.setRotationPoint(-4.0F, 7.8F, 7.5F);
		this.rightThigh.addBox(-4.0F, -1.0F, -3.0F, 4, 9, 6, 0.0F);
		this.leftLeg = new AdvancedModelRenderer(this, 0, 4);
		this.leftLeg.mirror = true;
		this.leftLeg.setRotationPoint(1.5F, 5.0F, 2.0F);
		this.leftLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 10, 3, 0.0F);
		ModelUtils.setRotateAngle(leftLeg, -0.2617993877991494F, -0.0F, 0.0F);
		this.tail1 = new AdvancedModelRenderer(this, 61, 27);
		this.tail1.setRotationPoint(0.0F, -0.7F, 10.0F);
		this.tail1.addBox(-4.0F, 0.0F, 0.0F, 8, 7, 9, 0.0F);
		ModelUtils.setRotateAngle(tail1, -0.017453292519943295F, -0.0F, 0.0F);
		this.rightUpperArm = new AdvancedModelRenderer(this, 20, 18);
		this.rightUpperArm.setRotationPoint(-4.0F, 3.5F, -11.2F);
		this.rightUpperArm.addBox(-2.0F, -1.0F, -1.0F, 2, 4, 2, 0.0F);
		ModelUtils.setRotateAngle(rightUpperArm, 0.35220744305245566F, -0.0F, 0.0F);
		this.lowerBody = new AdvancedModelRenderer(this, 54, 43);
		this.lowerBody.setRotationPoint(0.0F, 4.8F, 1.0F);
		this.lowerBody.addBox(-5.0F, -1.0F, 0.0F, 10, 11, 10, 0.0F);
		ModelUtils.setRotateAngle(lowerBody, -0.03490658503988659F, -0.0F, 0.0F);
		this.leftFoot = new AdvancedModelRenderer(this, 10, 9);
		this.leftFoot.mirror = true;
		this.leftFoot.setRotationPoint(-0.1F, 9.4F, 0.5F);
		this.leftFoot.addBox(-1.0F, 0.0F, -5.0F, 3, 2, 6, 0.0F);
		ModelUtils.setRotateAngle(leftFoot, 0.2617993877991494F, -0.0F, 0.0F);
		this.backNasalCrest = new AdvancedModelRenderer(this, 103, 50);
		this.backNasalCrest.setRotationPoint(-0.5F, -1.35F, -5.1F);
		this.backNasalCrest.addBox(0.0F, -3.0F, -1.0F, 1, 3, 4, 0.0F);
		ModelUtils.setRotateAngle(backNasalCrest, -0.8199556825869361F, -0.0F, 0.0F);
		this.rightLeg = new AdvancedModelRenderer(this, 0, 4);
		this.rightLeg.setRotationPoint(-1.5F, 5.0F, 2.0F);
		this.rightLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 10, 3, 0.0F);
		ModelUtils.setRotateAngle(rightLeg, -0.2617993877991494F, -0.0F, 0.0F);
		this.lowerJaw = new AdvancedModelRenderer(this, 23, 42);
		this.lowerJaw.setRotationPoint(0.0F, 2.2F, -6.7F);
		this.lowerJaw.addBox(-2.0F, 0.0F, -8.0F, 4, 1, 8, 0.0F);
		this.upperBody = new AdvancedModelRenderer(this, 21, 19);
		this.upperBody.setRotationPoint(0.0F, 3.0F, 4.0F);
		this.upperBody.addBox(-4.0F, -4.0F, -12.0F, 8, 10, 12, 0.0F);
		ModelUtils.setRotateAngle(upperBody, 0.08342673824532895F, -0.0F, 0.0F);
		this.neck = new AdvancedModelRenderer(this, 0, 32);
		this.neck.setRotationPoint(0.0F, -1.2F, -10.0F);
		this.neck.addBox(-3.0F, -3.0F, -9.0F, 6, 7, 9, 0.0F);
		ModelUtils.setRotateAngle(neck, -0.33161255787892263F, -0.0F, 0.0F);
		this.head = new AdvancedModelRenderer(this, 0, 48);
		this.head.setRotationPoint(0.0F, 0.0F, 0F);
		this.head.addBox(-3.5F, -4.0F, -8.0F, 7, 8, 8, 0.0F);
		ModelUtils.setRotateAngle(head, 0F, 0.0F, 0.0F);
		this.headPivot = new AdvancedModelRenderer(this, 0, 0);
		this.headPivot.setRotationPoint(0.0F, 0.8F, -7.5F);
		ModelUtils.setRotateAngle(headPivot, 0.3839724354387525F, 0.0F, 0.0F);
		this.frontNasalCrest = new AdvancedModelRenderer(this, 95, 52);
		this.frontNasalCrest.setRotationPoint(-0.5F, -1.1F, -4.6F);
		this.frontNasalCrest.addBox(0.0F, -2.0F, 0.0F, 1, 2, 3, 0.0F);
		ModelUtils.setRotateAngle(frontNasalCrest, 0.9309586230137754F, 0.0F, 0.0F);
		this.upperJaw = new AdvancedModelRenderer(this, 30, 51);
		this.upperJaw.setRotationPoint(0.0F, -0.8F, -8.0F);
		this.upperJaw.addBox(-2.5F, -3.0F, -7.0F, 5, 6, 7, 0.0F);
		this.tail2.addChild(this.tail3);
		this.leftUpperArm.addChild(this.leftLowerArm);
		this.upperBody.addChild(this.leftUpperArm);
		this.rightUpperArm.addChild(this.rightLowerArm);
		this.head.addChild(this.rightHorn);
		this.tail1.addChild(this.tail2);
		this.rightLeg.addChild(this.rightFoot);
		this.head.addChild(this.leftHorn);
		this.leftThigh.addChild(this.leftLeg);
		this.lowerBody.addChild(this.tail1);
		this.upperBody.addChild(this.rightUpperArm);
		this.leftLeg.addChild(this.leftFoot);
		this.upperJaw.addChild(this.backNasalCrest);
		this.rightThigh.addChild(this.rightLeg);
		this.head.addChild(this.lowerJaw);
		this.lowerBody.addChild(this.upperBody);
		this.upperBody.addChild(this.neck);
		this.neck.addChild(this.headPivot);
		this.headPivot.addChild(this.head);
		this.upperJaw.addChild(this.frontNasalCrest);
		this.head.addChild(this.upperJaw);
		this.updateDefaultPose();
		animator = ModelAnimator.create();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.rightThigh.render(f5);
		this.lowerBody.render(f5);
		this.leftThigh.render(f5);
		this.resetToDefaultPose();
	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		EntityCeratosaurus ceratosaurus = (EntityCeratosaurus) entity;
		animator.update(entity);
		blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
		this.resetToDefaultPose();
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(ceratosaurus.SPEAK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, lowerJaw, 20, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(ceratosaurus.ATTACK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -41, 0, 0);
		ModelUtils.rotate(animator, head, 57, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 25, 0, 0);
		animator.endKeyframe();
		animator.startKeyframe(5);
		ModelUtils.rotate(animator, neck, 6, 0, 0);
		ModelUtils.rotate(animator, head, -14, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 25, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		AdvancedModelRenderer[] tailParts = {this.tail1, this.tail2, this.tail3};
		AdvancedModelRenderer[] neckParts = {this.neck, this.head};
		AdvancedModelRenderer[] leftArmParts = {this.leftUpperArm, this.leftLowerArm};
		AdvancedModelRenderer[] rightArmParts = {this.rightUpperArm, this.rightLowerArm};
		if (((EntityPrehistoric) entity).isSkeleton() || ((EntityPrehistoric) entity).isAIDisabled()) {
			return;
		}
		ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
		ModelUtils.faceTargetMod(head, f3, f4, 0.5F);

		float speed = 0.1F;
		float speed2 = 0.5F;
		float degree = 0.5F;
		this.bob(lowerBody, speed, degree * 0.7F, false, entity.ticksExisted, 1);
		this.walk(leftThigh, speed2, 0.6F, false, 0F, 0.4F, f, f1);
		this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
		this.walk(leftFoot, speed2, -0.6F, true, 2.5F, -0.4F, f, f1);
		this.walk(rightThigh, speed2, 0.6F, true, 0F, -0.4F, f, f1);
		this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
		this.walk(rightFoot, speed2, -0.6F, false, 2.5F, 0.4F, f, f1);
		this.chainWave(tailParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(leftArmParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainWave(rightArmParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed2, degree * 0.25F, -3, f, f1);
		this.chainWave(neckParts, speed, degree * 0.15F, 3, entity.ticksExisted, 1);
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sitProgress;
			sitAnimationRotation(rightUpperArm, sitProgress, -((float) Math.toRadians(44.0D)), 0, 0);
			sitAnimationRotation(head, sitProgress, (float) Math.toRadians(22.0D), 0, 0);
			sitAnimationRotation(tail2, sitProgress, (float) Math.toRadians(4.0D), 0, 0);
			sitAnimationRotation(upperBody, sitProgress, (float) Math.toRadians(10.43D), 0, 0);
			sitAnimationRotation(backNasalCrest, sitProgress, -((float) Math.toRadians(46.98D)), 0, 0);
			sitAnimationRotation(leftLeg, sitProgress, -((float) Math.toRadians(65.0D)), 0, 0);
			sitAnimationRotation(leftThigh, sitProgress, -((float) Math.toRadians(20.0D)), 0, 0);
			sitAnimationRotation(rightThigh, sitProgress, -((float) Math.toRadians(20.0D)), 0, 0);
			sitAnimationRotation(tail3, sitProgress, (float) Math.toRadians(5.22D), 0, 0);
			sitAnimationRotation(leftLowerArm, sitProgress, -((float) Math.toRadians(42.35D)), 0, 0);
			sitAnimationRotation(lowerBody, sitProgress, -((float) Math.toRadians(10.43D)), 0, 0);
			sitAnimationRotation(tail1, sitProgress, -((float) Math.toRadians(5.22D)), 0, 0);
			sitAnimationRotation(neck, sitProgress, -((float) Math.toRadians(10.43D)), 0, 0);
			sitAnimationRotation(leftFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
			sitAnimationRotation(rightLowerArm, sitProgress, -((float) Math.toRadians(42.35D)), 0, 0);
			sitAnimationRotation(rightFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
			sitAnimationRotation(rightLeg, sitProgress, -((float) Math.toRadians(65.0D)), 0, 0);
			sitAnimationRotation(leftUpperArm, sitProgress, -((float) Math.toRadians(44.0D)), 0, 0);
			sitAnimationPos(lowerBody, sitProgress, 0, 8.1F, 0);
			sitAnimationPos(leftThigh, sitProgress, 0, 7.6F, 0);
			sitAnimationPos(rightThigh, sitProgress, 0, 7.6F, 0);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sleepProgress;
			sitAnimationRotation(rightThigh, sitProgress, -((float) Math.toRadians(20.0D)), 0, 0);
			sitAnimationRotation(leftFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
			sitAnimationRotation(rightLowerArm, sitProgress, -((float) Math.toRadians(42.35D)), 0, 0);
			sitAnimationRotation(leftUpperArm, sitProgress, -((float) Math.toRadians(44.0D)), 0, 0);
			sitAnimationRotation(neck, sitProgress, (float) Math.toRadians(30D), 0, 0);
			sitAnimationRotation(upperBody, sitProgress, (float) Math.toRadians(15.65D), 0, 0);
			sitAnimationRotation(leftLowerArm, sitProgress, -((float) Math.toRadians(42.35D)), 0, 0);
			sitAnimationRotation(rightFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
			sitAnimationRotation(head, sitProgress, -((float) Math.toRadians(40D)), (float) Math.toRadians(7.83D), -((float) Math.toRadians(5.22D)));
			sitAnimationRotation(rightUpperArm, sitProgress, -((float) Math.toRadians(44.0D)), 0, 0);
			sitAnimationRotation(lowerBody, sitProgress, -((float) Math.toRadians(10.43D)), 0, 0);
			sitAnimationRotation(leftThigh, sitProgress, -((float) Math.toRadians(20.0D)), 0, 0);
			sitAnimationRotation(leftLeg, sitProgress, -((float) Math.toRadians(65.0D)), 0, 0);
			sitAnimationRotation(tail2, sitProgress, (float) Math.toRadians(4.0D), -((float) Math.toRadians(13.04D)), -((float) Math.toRadians(7.83D)));
			sitAnimationRotation(tail1, sitProgress, -((float) Math.toRadians(7.83D)), 0, 0);
			sitAnimationRotation(backNasalCrest, sitProgress, -((float) Math.toRadians(46.98D)), 0, 0);
			sitAnimationRotation(tail3, sitProgress, (float) Math.toRadians(10.43D), -((float) Math.toRadians(7.83D)), 0);
			sitAnimationRotation(rightLeg, sitProgress, -((float) Math.toRadians(65.0D)), 0, 0);
			sitAnimationPos(lowerBody, sitProgress, 0, 8.1F, 0);
			sitAnimationPos(leftThigh, sitProgress, 0, 7.6F, 0);
			sitAnimationPos(rightThigh, sitProgress, 0, 7.6F, 0);
		}
		((EntityPrehistoric) entity).chainBuffer.applyChainSwingBuffer((ModelRenderer[]) tailParts);
	}
}
