package fossilsarcheology.client.model;

import fossilsarcheology.server.entity.prehistoric.EntityDeinonychus;
import fossilsarcheology.server.entity.prehistoric.EntityPrehistoric;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;

public class ModelDeinonychus extends ModelPrehistoric {
	public AdvancedModelRenderer lowerBody;
	public AdvancedModelRenderer leftThigh;
	public AdvancedModelRenderer rightThigh;
	public AdvancedModelRenderer upperBody;
	public AdvancedModelRenderer tail1;
	public AdvancedModelRenderer neck;
	public AdvancedModelRenderer rightUpperArm;
	public AdvancedModelRenderer rightUpperArm_1;
	public AdvancedModelRenderer head;
	public AdvancedModelRenderer upperJaw;
	public AdvancedModelRenderer lowerJaw;
	public AdvancedModelRenderer crest;
	public AdvancedModelRenderer crest2;
	public AdvancedModelRenderer crest3;
	public AdvancedModelRenderer rightLowerArm;
	public AdvancedModelRenderer rightLowerArmWing;
	public AdvancedModelRenderer rightLowerArmWing2;
	public AdvancedModelRenderer rightLowerArm_1;
	public AdvancedModelRenderer rightLowerArmWing_1;
	public AdvancedModelRenderer rightLowerArmWing2_1;
	public AdvancedModelRenderer tail2;
	public AdvancedModelRenderer TailFeather4;
	public AdvancedModelRenderer tail3;
	public AdvancedModelRenderer TailFeather2;
	public AdvancedModelRenderer TailFeather1;
	public AdvancedModelRenderer TailFeather3;
	public AdvancedModelRenderer leftLeg;
	public AdvancedModelRenderer leftFoot;
	public AdvancedModelRenderer leftToeClaw1;
	public AdvancedModelRenderer leftToeClaw2;
	public AdvancedModelRenderer rightLeg;
	public AdvancedModelRenderer rightFoot;
	public AdvancedModelRenderer rightToeClaw1;
	public AdvancedModelRenderer rightToeClaw2;
	ModelAnimator animator;

	public ModelDeinonychus() {
		this.textureWidth = 128;
		this.textureHeight = 64;
		this.lowerJaw = new AdvancedModelRenderer(this, 94, 51);
		this.lowerJaw.setRotationPoint(0.0F, 1.37F, -1.6F);
		this.lowerJaw.addBox(-1.5F, -1.0F, -8.6F, 3, 2, 11, 0.0F);
		this.setRotateAngle(lowerJaw, -0.136659280431156F, 0.0F, 0.0F);
		this.crest3 = new AdvancedModelRenderer(this, 30, 18);
		this.crest3.setRotationPoint(-1.1F, -1.4F, -0.6F);
		this.crest3.addBox(-0.5F, -2.0F, 0.0F, 1, 5, 8, 0.0F);
		this.setRotateAngle(crest3, -0.3141592653589793F, -0.17453292519943295F, 0.08726646259971647F);
		this.rightLowerArm_1 = new AdvancedModelRenderer(this, 14, 2);
		this.rightLowerArm_1.mirror = true;
		this.rightLowerArm_1.setRotationPoint(1.2F, 2.0F, 2.8F);
		this.rightLowerArm_1.addBox(-1.1F, 0.5F, -9.0F, 2, 2, 7, 0.0F);
		this.setRotateAngle(rightLowerArm_1, 0.091106186954104F, -0.0F, 0.0F);
		this.rightFoot = new AdvancedModelRenderer(this, 21, 34);
		this.rightFoot.setRotationPoint(0.0F, -0.9F, -7.0F);
		this.rightFoot.addBox(-1.5F, 0.0F, -3.0F, 3, 2, 4, 0.0F);
		this.setRotateAngle(rightFoot, -1.1435397259066846F, -0.0F, 0.0F);
		this.leftToeClaw2 = new AdvancedModelRenderer(this, 5, 12);
		this.leftToeClaw2.setRotationPoint(0.0F, -0.5F, -3.0F);
		this.leftToeClaw2.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(leftToeClaw2, -1.7627825445142729F, -0.0F, 0.0F);
		this.rightThigh = new AdvancedModelRenderer(this, 2, 34);
		this.rightThigh.setRotationPoint(-3.0F, 11.0F, 2.5F);
		this.rightThigh.addBox(-3.0F, -1.0F, -2.5F, 3, 8, 5, 0.0F);
		this.setRotateAngle(rightThigh, -0.17453292519943295F, -0.0F, 0.0F);
		this.head = new AdvancedModelRenderer(this, 68, 47);
		this.head.setRotationPoint(0.0F, -1.6F, -8.6F);
		this.head.addBox(-2.5F, -3.0F, -3.9F, 5, 5, 7, 0.0F);
		this.setRotateAngle(head, 1.593485607070823F, -0.0F, 0.0F);
		this.rightUpperArm_1 = new AdvancedModelRenderer(this, 18, 15);
		this.rightUpperArm_1.mirror = true;
		this.rightUpperArm_1.setRotationPoint(2.0F, 3.3F, -4.5F);
		this.rightUpperArm_1.addBox(0.0F, -1.0F, -1.0F, 2, 6, 4, 0.0F);
		this.setRotateAngle(rightUpperArm_1, 1.1383037381507017F, 0.18203784098300857F, -0.22759093446006054F);
		this.rightLeg = new AdvancedModelRenderer(this, 1, 21);
		this.rightLeg.setRotationPoint(-1.5F, 5.0F, 2.5F);
		this.rightLeg.addBox(-1.0F, -1.0F, -8.0F, 2, 2, 8, 0.0F);
		this.setRotateAngle(rightLeg, 1.3089969389957472F, -0.0F, 0.0F);
		this.crest2 = new AdvancedModelRenderer(this, 30, 18);
		this.crest2.setRotationPoint(1.1F, -1.4F, -0.6F);
		this.crest2.addBox(-0.5F, -2.0F, 0.0F, 1, 5, 8, 0.0F);
		this.setRotateAngle(crest2, -0.3141592653589793F, 0.17453292519943295F, 0.08726646259971647F);
		this.rightToeClaw2 = new AdvancedModelRenderer(this, 5, 12);
		this.rightToeClaw2.setRotationPoint(0.0F, -0.5F, -3.0F);
		this.rightToeClaw2.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 2, 0.0F);
		this.setRotateAngle(rightToeClaw2, -1.7627825445142729F, -0.0F, 0.0F);
		this.leftThigh = new AdvancedModelRenderer(this, 2, 34);
		this.leftThigh.mirror = true;
		this.leftThigh.setRotationPoint(3.0F, 11.0F, 2.5F);
		this.leftThigh.addBox(0.0F, -1.0F, -2.5F, 3, 8, 5, 0.0F);
		this.setRotateAngle(leftThigh, -0.17453292519943295F, -0.0F, 0.0F);
		this.tail1 = new AdvancedModelRenderer(this, 86, 3);
		this.tail1.setRotationPoint(0.0F, -0.7F, 8.3F);
		this.tail1.addBox(-2.0F, -2.0F, 0.0F, 4, 6, 9, 0.0F);
		this.setRotateAngle(tail1, 0.14905111812031574F, -0.0F, 0.0F);
		this.rightLowerArmWing2 = new AdvancedModelRenderer(this, 40, 5);
		this.rightLowerArmWing2.mirror = true;
		this.rightLowerArmWing2.setRotationPoint(-0.5F, 2.9F, -7.1F);
		this.rightLowerArmWing2.addBox(-0.45F, -0.5F, -2.0F, 1, 8, 5, 0.0F);
		this.setRotateAngle(rightLowerArmWing2, -0.2617993877991494F, -0.0F, 0.0F);
		this.rightLowerArm = new AdvancedModelRenderer(this, 14, 2);
		this.rightLowerArm.setRotationPoint(-1.2F, 2.0F, 2.8F);
		this.rightLowerArm.addBox(-0.9F, 0.5F, -9.0F, 2, 2, 7, 0.0F);
		this.setRotateAngle(rightLowerArm, 0.091106186954104F, -0.0F, 0.0F);
		this.rightToeClaw1 = new AdvancedModelRenderer(this, 6, 16);
		this.rightToeClaw1.setRotationPoint(1.1F, 1.0F, -1.0F);
		this.rightToeClaw1.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(rightToeClaw1, -0.8726646259971648F, -0.0F, 0.0F);
		this.rightLowerArmWing2_1 = new AdvancedModelRenderer(this, 40, 5);
		this.rightLowerArmWing2_1.setRotationPoint(0.5F, 2.9F, -7.1F);
		this.rightLowerArmWing2_1.addBox(-0.55F, -0.5F, -2.0F, 1, 8, 5, 0.0F);
		this.setRotateAngle(rightLowerArmWing2_1, -0.2617993877991494F, -0.0F, 0.0F);
		this.neck = new AdvancedModelRenderer(this, 40, 48);
		this.neck.setRotationPoint(0.0F, 2.1F, -6.4F);
		this.neck.addBox(-2.0F, -4.0F, -8.0F, 4, 6, 10, 0.0F);
		this.setRotateAngle(neck, -1.2292353921796064F, 0.0017453292519943296F, 0.0F);
		this.TailFeather1 = new AdvancedModelRenderer(this, 26, 32);
		this.TailFeather1.setRotationPoint(0.0F, 0.0F, 9.1F);
		this.TailFeather1.addBox(-3.0F, 0.0F, -1.2F, 6, 1, 15, 0.0F);
		this.lowerBody = new AdvancedModelRenderer(this, 79, 18);
		this.lowerBody.setRotationPoint(0.0F, 9.3F, -3.0F);
		this.lowerBody.addBox(-4.0F, -3.5F, 0.0F, 8, 9, 10, 0.0F);
		this.setRotateAngle(lowerBody, -0.22759093446006054F, -0.0F, 0.0F);
		this.upperBody = new AdvancedModelRenderer(this, 4, 47);
		this.upperBody.setRotationPoint(0.0F, -1.1F, -1.0F);
		this.upperBody.addBox(-3.0F, -2.0F, -7.0F, 6, 8, 9, 0.0F);
		this.setRotateAngle(upperBody, 0.22759093446006054F, -0.0F, 0.0F);
		this.TailFeather2 = new AdvancedModelRenderer(this, 74, 37);
		this.TailFeather2.setRotationPoint(0.0F, -0.5F, 0.1F);
		this.TailFeather2.addBox(-3.5F, -0.3F, 0.0F, 7, 1, 8, 0.0F);
		this.leftLeg = new AdvancedModelRenderer(this, 1, 21);
		this.leftLeg.mirror = true;
		this.leftLeg.setRotationPoint(1.5F, 5.0F, 2.5F);
		this.leftLeg.addBox(-1.0F, -1.0F, -8.0F, 2, 2, 8, 0.0F);
		this.setRotateAngle(leftLeg, 1.3089969389957472F, -0.0F, 0.0F);
		this.upperJaw = new AdvancedModelRenderer(this, 97, 39);
		this.upperJaw.setRotationPoint(0.0F, -0.9F, -3.1F);
		this.upperJaw.addBox(-2.0F, -2.0F, -7.0F, 4, 3, 8, 0.0F);
		this.crest = new AdvancedModelRenderer(this, 30, 18);
		this.crest.setRotationPoint(0.0F, -1.0F, -0.8F);
		this.crest.addBox(-0.5F, -2.0F, 0.0F, 1, 5, 8, 0.0F);
		this.setRotateAngle(crest, 0.18203784098300857F, -0.0F, 0.0F);
		this.TailFeather4 = new AdvancedModelRenderer(this, 73, 37);
		this.TailFeather4.setRotationPoint(0.0F, -1.3F, 0.1F);
		this.TailFeather4.addBox(-4.0F, 0.2F, 1.5F, 8, 1, 8, 0.0F);
		this.rightUpperArm = new AdvancedModelRenderer(this, 18, 15);
		this.rightUpperArm.setRotationPoint(-2.0F, 3.3F, -4.5F);
		this.rightUpperArm.addBox(-2.0F, -1.0F, -1.0F, 2, 6, 4, 0.0F);
		this.setRotateAngle(rightUpperArm, 1.1383037381507017F, -0.18203784098300857F, 0.22759093446006054F);
		this.leftToeClaw1 = new AdvancedModelRenderer(this, 6, 16);
		this.leftToeClaw1.mirror = true;
		this.leftToeClaw1.setRotationPoint(-1.1F, 1.0F, -1.0F);
		this.leftToeClaw1.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(leftToeClaw1, -0.8726646259971648F, 0.0F, 0.0F);
		this.TailFeather3 = new AdvancedModelRenderer(this, 53, 36);
		this.TailFeather3.setRotationPoint(0.0F, 0.3F, 1.1F);
		this.TailFeather3.addBox(-3.5F, -0.3F, -1.1F, 7, 1, 8, 0.0F);
		this.tail2 = new AdvancedModelRenderer(this, 105, 10);
		this.tail2.setRotationPoint(0.0F, -0.3F, 8.9F);
		this.tail2.addBox(-1.0F, -1.6F, 0.0F, 2, 4, 9, 0.0F);
		this.setRotateAngle(tail2, 0.03630284844148206F, -0.0F, 0.0F);
		this.rightLowerArmWing = new AdvancedModelRenderer(this, 52, 12);
		this.rightLowerArmWing.mirror = true;
		this.rightLowerArmWing.setRotationPoint(-0.5F, -0.3F, 0.5F);
		this.rightLowerArmWing.addBox(-0.5F, 0.0F, -8.0F, 1, 6, 7, 0.0F);
		this.setRotateAngle(rightLowerArmWing, 0.31869712141416456F, -0.0F, 0.0F);
		this.rightLowerArmWing_1 = new AdvancedModelRenderer(this, 52, 12);
		this.rightLowerArmWing_1.setRotationPoint(0.5F, -0.3F, 0.5F);
		this.rightLowerArmWing_1.addBox(-0.5F, 0.0F, -8.0F, 1, 6, 7, 0.0F);
		this.setRotateAngle(rightLowerArmWing_1, 0.31869712141416456F, -0.0F, 0.0F);
		this.leftFoot = new AdvancedModelRenderer(this, 21, 34);
		this.leftFoot.mirror = true;
		this.leftFoot.setRotationPoint(0.0F, -0.9F, -7.0F);
		this.leftFoot.addBox(-1.5F, 0.0F, -3.0F, 3, 2, 4, 0.0F);
		this.setRotateAngle(leftFoot, -1.1435397259066846F, -0.0F, 0.0F);
		this.tail3 = new AdvancedModelRenderer(this, 53, 9);
		this.tail3.setRotationPoint(0.0F, -0.9F, 7.5F);
		this.tail3.addBox(-0.5F, -0.3F, 0.1F, 1, 2, 17, 0.0F);
		this.head.addChild(this.lowerJaw);
		this.head.addChild(this.crest3);
		this.rightUpperArm_1.addChild(this.rightLowerArm_1);
		this.rightLeg.addChild(this.rightFoot);
		this.leftToeClaw1.addChild(this.leftToeClaw2);
		this.neck.addChild(this.head);
		this.upperBody.addChild(this.rightUpperArm_1);
		this.rightThigh.addChild(this.rightLeg);
		this.head.addChild(this.crest2);
		this.rightToeClaw1.addChild(this.rightToeClaw2);
		this.lowerBody.addChild(this.tail1);
		this.rightLowerArm.addChild(this.rightLowerArmWing2);
		this.rightUpperArm.addChild(this.rightLowerArm);
		this.rightFoot.addChild(this.rightToeClaw1);
		this.rightLowerArm_1.addChild(this.rightLowerArmWing2_1);
		this.upperBody.addChild(this.neck);
		this.tail3.addChild(this.TailFeather1);
		this.lowerBody.addChild(this.upperBody);
		this.tail2.addChild(this.TailFeather2);
		this.leftThigh.addChild(this.leftLeg);
		this.head.addChild(this.upperJaw);
		this.head.addChild(this.crest);
		this.tail1.addChild(this.TailFeather4);
		this.upperBody.addChild(this.rightUpperArm);
		this.leftFoot.addChild(this.leftToeClaw1);
		this.tail3.addChild(this.TailFeather3);
		this.tail1.addChild(this.tail2);
		this.rightLowerArm.addChild(this.rightLowerArmWing);
		this.rightLowerArm_1.addChild(this.rightLowerArmWing_1);
		this.leftLeg.addChild(this.leftFoot);
		this.tail2.addChild(this.tail3);
		this.updateDefaultPose();
		animator = ModelAnimator.create();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.rightThigh.render(f5);
		this.lowerBody.render(f5);
		this.leftThigh.render(f5);

	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		EntityDeinonychus deinonychus = (EntityDeinonychus) entity;
		AdvancedModelRenderer[] neckParts = {this.neck, this.head};
		animator.update(entity);
		blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
		this.resetToDefaultPose();
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(deinonychus.SPEAK_ANIMATION);
		animator.startKeyframe(10);
		animator.move(lowerJaw, 0, 0, 0.5F);
		ModelUtils.rotate(animator, lowerJaw, 30, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(deinonychus.ANIMATION_JUMPAT);
		animator.startKeyframe(15);
		animator.move(leftThigh, 0, 3.2F, -0.5F);
		animator.move(rightThigh, 0, 3.2F, -0.5F);
		animator.move(lowerBody, 0, 5.2F, -0.5F);
		ModelUtils.rotate(animator, lowerBody, 15, 0, 0);
		ModelUtils.rotate(animator, rightLeg, -30, 0, 0);
		ModelUtils.rotate(animator, leftLeg, -30, 0, 0);
		ModelUtils.rotate(animator, rightFoot, 30, 0, 0);
		ModelUtils.rotate(animator, leftFoot, 30, 0, 0);
		ModelUtils.rotate(animator, rightUpperArm_1, 0, 0, -50);
		ModelUtils.rotate(animator, rightUpperArm, 0, 0, 50);
		ModelUtils.rotate(animator, head, -20, 0, 0);
		animator.endKeyframe();
		animator.setStaticKeyframe(5);
		animator.startKeyframe(5);
		animator.move(leftThigh, 0, -6F, 0F);
		animator.move(rightThigh, 0, -6F, 0F);
		animator.move(lowerBody, 0, -10F, 0F);
		ModelUtils.rotate(animator, lowerBody, -25, 0, 0);
		ModelUtils.rotate(animator, rightThigh, -35, 0, 0);
		ModelUtils.rotate(animator, leftThigh, -35, 0, 0);
		ModelUtils.rotate(animator, rightLeg, -30, 0, 0);
		ModelUtils.rotate(animator, leftLeg, -30, 0, 0);
		ModelUtils.rotate(animator, rightFoot, -55, 0, 0);
		ModelUtils.rotate(animator, leftFoot, -55, 0, 0);
		ModelUtils.rotate(animator, rightUpperArm_1, 0, 0, -50);
		ModelUtils.rotate(animator, rightUpperArm, 0, 0, 50);
		animator.endKeyframe();
		animator.setStaticKeyframe(5);
		animator.resetKeyframe(5);
		animator.setAnimation(deinonychus.ATTACK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -20, 0, 0);
		ModelUtils.rotate(animator, head, 20, 0, 0);
		animator.move(head, 0, 0, -2);
		ModelUtils.rotate(animator, lowerJaw, 25, 0, 0);
		animator.endKeyframe();
		animator.startKeyframe(5);
		ModelUtils.rotate(animator, neck, 6, 0, 0);
		ModelUtils.rotate(animator, head, -14, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 1, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(5);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		AdvancedModelRenderer[] tailParts = {this.tail1, this.tail2, this.tail3};
		AdvancedModelRenderer[] neckParts = {this.neck, this.head};
		AdvancedModelRenderer[] leftArmParts = {this.rightUpperArm_1, this.rightLowerArm_1};
		AdvancedModelRenderer[] rightArmParts = {this.rightUpperArm, this.rightLowerArm};
		if (((EntityPrehistoric) entity).isSkeleton() || ((EntityPrehistoric) entity).isAIDisabled()) {
			return;
		}
		ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
		ModelUtils.faceTargetMod(head, f3, f4, 0.5F);
		float speed = 0.1F;
		float speed2 = 0.3F;
		float degree = 0.5F;
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sitProgress;
			sitAnimationRotationPrev(upperBody, sitProgress, 0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.136659280431156F, 0.0F, 0.0F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -0.17453292519943295F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm_1, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.27314402793711257F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail3, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -0.17453292519943295F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm_1, sitProgress, 1.1383037381507017F, 0.18203784098300857F, -0.4553564018453205F);
			sitAnimationRotationPrev(tail2, sitProgress, 0.10471975511965977F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightFoot, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftFoot, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -1.2292353921796064F, 0.0017453292519943296F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 1.1383037381507017F, -0.18203784098300857F, 0.4553564018453205F);
			sitAnimationRotationPrev(head, sitProgress, 1.8668041679331349F, -0.0F, 0.0F);
			sitAnimationPos(lowerBody, sitProgress, 0F, 15.30F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 17F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 17F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sleepProgress;
			sitAnimationRotationPrev(rightFoot, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.045553093477052F, 0.22759093446006054F, 0.091106186954104F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -0.17453292519943295F, -0.0F, 0.0F);
			sitAnimationRotationPrev(head, sitProgress, 1.9577358219620393F, -0.091106186954104F, -0.18203784098300857F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.27314402793711257F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftFoot, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 1.1383037381507017F, -0.18203784098300857F, 0.4553564018453205F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -0.17453292519943295F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm_1, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm_1, sitProgress, 1.1383037381507017F, 0.18203784098300857F, -0.4553564018453205F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(upperBody, sitProgress, 0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail2, sitProgress, 0.03630284844148206F, 0.22759093446006054F, 0.045553093477052F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.136659280431156F, 0.0F, 0.0F);
			sitAnimationRotationPrev(tail3, sitProgress, 0.136659280431156F, 0.18203784098300857F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -1.6390387005478748F, -0.5009094953223726F, 0.18203784098300857F);
			sitAnimationPos(lowerBody, sitProgress, 0F, 15.30F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 17F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 17F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).climbProgress;
			sitAnimationRotationPrev(tail3, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 0.7285004297824331F, -0.18203784098300857F, 0.6829473363053812F);
			sitAnimationRotationPrev(rightUpperArm_1, sitProgress, 0.7285004297824331F, 0.18203784098300857F, -0.6829473363053812F);
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.22759093446006054F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.36425021489121656F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftFoot, sitProgress, -0.5009094953223726F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.36425021489121656F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightFoot, sitProgress, -0.5009094953223726F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm_1, sitProgress, 0.091106186954104F, -0.0F, -0.22759093446006054F);
			sitAnimationRotationPrev(head, sitProgress, 0.7285004297824331F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail2, sitProgress, 0.03630284844148206F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -1.1838568316277536F, -0.0F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -0.40980330836826856F, 0.0017453292519943296F, 0.0F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -1.3203415791337103F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -1.1838568316277536F, 0.0F, 0.0F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.136659280431156F, 0.0F, 0.0F);
			sitAnimationRotationPrev(upperBody, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.36425021489121656F, -0.0F, 0.0F);

			sitAnimationPos(lowerBody, sitProgress, 0F, 9.3F - ModelUtils.getDefaultPositionY(lowerBody), -3.4F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 15F - ModelUtils.getDefaultPositionY(rightThigh), -9.7F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 15F - ModelUtils.getDefaultPositionY(leftThigh), -9.7F);
			if (sitProgress >= 10) {
				this.walk(leftThigh, speed2, -0.8F, false, 0F, 0F, entity.ticksExisted, 1);
				this.walk(leftLeg, speed2, 0.2F, true, 0F, -0.6F, entity.ticksExisted, 1);
				this.walk(leftFoot, speed2, -0.4F, true, -0.5F, -0.2F, entity.ticksExisted, 1);
				this.walk(rightThigh, speed2, -0.8F, false, 0F, 0F, entity.ticksExisted, 1);
				this.walk(rightLeg, speed2, 0.2F, true, 0F, -0.6F, entity.ticksExisted, 1);
				this.walk(rightFoot, speed2, -0.4F, true, -0.5F, -0.2F, entity.ticksExisted, 1);
				this.walk(rightUpperArm, speed2, 0.6F, true, -0.5F, 0F, entity.ticksExisted, 1);
				this.walk(rightUpperArm_1, speed2, 0.6F, true, -0.5F, 0F, entity.ticksExisted, 1);
				this.chainWave(neckParts, speed, -0.3F, 5, entity.ticksExisted, 1);
			}
		}
		this.walk(upperBody, speed, degree * 0.1F, false, 1F, 0F, entity.ticksExisted, 1);
		this.bob(lowerBody, speed, degree * 0.7F, false, entity.ticksExisted, 1);
		this.chainWave(tailParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(leftArmParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainWave(rightArmParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed2, degree * 0.25F, -3, f, f1);
		this.chainWave(neckParts, speed, degree * 0.15F, 3, entity.ticksExisted, 1);

		this.walk(leftThigh, speed2, 0.6F, false, 0F, 0.4F, f, f1);
		this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
		this.walk(leftFoot, speed2, -0.6F, true, 2.5F, -0.4F, f, f1);
		this.walk(rightThigh, speed2, 0.6F, true, 0F, -0.4F, f, f1);
		this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
		this.walk(rightFoot, speed2, -0.6F, false, 2.5F, 0.4F, f, f1);
		this.chainWave(neckParts, speed2, degree * 0.5F, 3, f, f1);
		this.chainWave(tailParts, speed2, degree * 0.3F, -4, f, f1);

		if (((EntityDeinonychus) entity).getAnimation() != ((EntityDeinonychus) entity).ATTACK_ANIMATION && entity.getRidingEntity() != null && entity.getRidingEntity() instanceof EntityLivingBase) {
			ModelUtils.setRotateAngleAlt(lowerBody, -15, 0, 0);
			ModelUtils.setRotateAngleAlt(leftLeg, 20, 0, 0);
			ModelUtils.setRotateAngleAlt(leftFoot, -20, 0, 0);
			ModelUtils.setRotateAngleAlt(rightLeg, 20, 0, 0);
			ModelUtils.setRotateAngleAlt(rightFoot, -20, 0, 0);
			ModelUtils.setRotateAngleAlt(rightUpperArm_1, 0, 0, -40);
			ModelUtils.setRotateAngleAlt(rightUpperArm, 0, 0, 40);
			ModelUtils.setRotateAngleAlt(neck, 20, 0, 0);
			ModelUtils.setRotateAngleAlt(head, 60, 0, 0);
			EntityDeinonychus dino = (EntityDeinonychus) entity;
			float speed3 = 0.5F;
			this.walk(lowerJaw, speed3, -0.3F, false, 0.5F, 0.3F, entity.ticksExisted, 1);
			this.walk(neck, speed3, 0.4F, false, 0F, 0.4F, entity.ticksExisted, 1);
			this.walk(head, speed3, 0.4F, true, 0F, 0.2F, entity.ticksExisted, 1);
			this.flap(rightUpperArm_1, 0.8F, -0.4F, true, 0.3F, 0.2F, entity.ticksExisted, 1);
			this.flap(rightUpperArm, 0.8F, -0.4F, false, 0.3F, 0.2F, entity.ticksExisted, 1);
		}
		((EntityPrehistoric) entity).chainBuffer.applyChainSwingBuffer((AdvancedModelRenderer[]) tailParts);
	}
}
