package fossilsarcheology.client.model;

import fossilsarcheology.server.entity.prehistoric.EntityGallimimus;
import fossilsarcheology.server.entity.prehistoric.EntityPrehistoric;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelGallimimus extends ModelPrehistoric {
	public final AdvancedModelRenderer lowerBody;
	public final AdvancedModelRenderer rightThigh;
	public final AdvancedModelRenderer leftThigh;
	public final AdvancedModelRenderer upperBody;
	public final AdvancedModelRenderer tail1;
	public final AdvancedModelRenderer rightUpperArm;
	public final AdvancedModelRenderer leftUpperArm;
	public final AdvancedModelRenderer neck;
	public final AdvancedModelRenderer neck_1;
	public final AdvancedModelRenderer rightLowerArm;
	public final AdvancedModelRenderer rightUpperArmFeather;
	public final AdvancedModelRenderer rightLowerArmFeather;
	public final AdvancedModelRenderer leftLowerArm;
	public final AdvancedModelRenderer leftUpperArmFeather;
	public final AdvancedModelRenderer leftLowerArmFeather;
	public final AdvancedModelRenderer headPivot;
	public final AdvancedModelRenderer head;
	public final AdvancedModelRenderer upperJaw;
	public final AdvancedModelRenderer lowerJaw;
	public final AdvancedModelRenderer crest;
	public final AdvancedModelRenderer tail2;
	public final AdvancedModelRenderer tail3;
	public final AdvancedModelRenderer tailCrest;
	public final AdvancedModelRenderer rightLeg;
	public final AdvancedModelRenderer rightFoot;
	public final AdvancedModelRenderer leftLeg;
	public final AdvancedModelRenderer leftFoot;
	private final ModelAnimator animator;

	public ModelGallimimus() {
		this.textureWidth = 128;
		this.textureHeight = 64;
		this.leftThigh = new AdvancedModelRenderer(this, 1, 13);
		this.leftThigh.setRotationPoint(3.5F, 10.0F, 5.0F);
		this.leftThigh.addBox(0.0F, -1.0F, -2.0F, 3, 6, 4, 0.0F);
		this.rightUpperArmFeather = new AdvancedModelRenderer(this, 34, 14);
		this.rightUpperArmFeather.setRotationPoint(-1.2F, 3.7F, 0.0F);
		this.rightUpperArmFeather.addBox(-0.5F, -3.0F, 0.0F, 1, 6, 3, 0.0F);
		this.setRotateAngle(rightUpperArmFeather, -0.3839724354387525F, 0.0F, 0.0F);
		this.leftLowerArmFeather = new AdvancedModelRenderer(this, 61, 13);
		this.leftLowerArmFeather.mirror = true;
		this.leftLowerArmFeather.setRotationPoint(1.5F, 3.0F, 1.6F);
		this.leftLowerArmFeather.addBox(-0.5F, -3.0F, 0.0F, 1, 5, 4, 0.0F);
		this.leftFoot = new AdvancedModelRenderer(this, 22, 10);
		this.leftFoot.setRotationPoint(-0.1F, 9.5F, -0.5F);
		this.leftFoot.addBox(-1.0F, 0.0F, -2.0F, 3, 2, 3, 0.0F);
		this.setRotateAngle(leftFoot, 0.17453292519943295F, -0.0F, 0.0F);
		this.rightLowerArm = new AdvancedModelRenderer(this, 8, 0);
		this.rightLowerArm.mirror = true;
		this.rightLowerArm.setRotationPoint(-1.2F, 3.4F, -0.4F);
		this.rightLowerArm.addBox(-1.0F, 0.0F, 0.0F, 2, 5, 2, 0.0F);
		this.setRotateAngle(rightLowerArm, -0.9250245035569946F, -0.0F, 0.0F);
		this.tail3 = new AdvancedModelRenderer(this, 28, 45);
		this.tail3.setRotationPoint(0.0F, 0.0F, 9.5F);
		this.tail3.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 13, 0.0F);
		this.setRotateAngle(tail3, -0.10471975511965977F, 0.0F, 0.0F);
		this.tailCrest = new AdvancedModelRenderer(this, 67, 18);
		this.tailCrest.setRotationPoint(0.5F, 1.0F, 9.0F);
		this.tailCrest.addBox(-0.5F, -1.0F, 0.0F, 1, 3, 10, 0.0F);
		this.leftUpperArm = new AdvancedModelRenderer(this, 0, 24);
		this.leftUpperArm.setRotationPoint(2.5F, 1.1F, -6.4F);
		this.leftUpperArm.addBox(0.0F, 0.0F, -1.0F, 2, 5, 2, 0.0F);
		this.setRotateAngle(leftUpperArm, 0.8916887148439029F, -0.0F, 0.0F);
		this.head = new AdvancedModelRenderer(this, 47, 13);
		this.head.addBox(-1.5F, -3.0F, -3.0F, 3, 3, 3, 0.0F);
		this.headPivot = new AdvancedModelRenderer(this, 0, 0);
		this.headPivot.setRotationPoint(0.0F, -6.1F, 0.2F);
		this.setRotateAngle(headPivot, -0.18657569703819382F, -0.0F, 0.0F);
		this.leftUpperArmFeather = new AdvancedModelRenderer(this, 34, 14);
		this.leftUpperArmFeather.mirror = true;
		this.leftUpperArmFeather.setRotationPoint(1.2F, 3.7F, 0.0F);
		this.leftUpperArmFeather.addBox(-0.5F, -3.0F, 0.0F, 1, 6, 3, 0.0F);
		this.setRotateAngle(leftUpperArmFeather, -0.3839724354387525F, 0.0F, 0.0F);
		this.rightLowerArmFeather = new AdvancedModelRenderer(this, 61, 13);
		this.rightLowerArmFeather.setRotationPoint(-0.4F, 3.0F, 1.6F);
		this.rightLowerArmFeather.addBox(-0.5F, -3.0F, 0.0F, 1, 5, 4, 0.0F);
		this.rightThigh = new AdvancedModelRenderer(this, 1, 13);
		this.rightThigh.mirror = true;
		this.rightThigh.setRotationPoint(-3.5F, 10.0F, 5.0F);
		this.rightThigh.addBox(-3.0F, -1.0F, -2.0F, 3, 6, 4, 0.0F);
		this.upperBody = new AdvancedModelRenderer(this, 42, 22);
		this.upperBody.setRotationPoint(0.0F, 2.0F, 0.3F);
		this.upperBody.addBox(-2.5F, -2.0F, -7.0F, 5, 6, 7, 0.0F);
		this.setRotateAngle(upperBody, 0.13805554383275148F, -0.0F, 0.0F);
		this.rightFoot = new AdvancedModelRenderer(this, 22, 10);
		this.rightFoot.setRotationPoint(0.1F, 9.5F, -0.5F);
		this.rightFoot.addBox(-2.0F, 0.0F, -2.0F, 3, 2, 3, 0.0F);
		this.setRotateAngle(rightFoot, 0.17453292519943295F, -0.0F, 0.0F);
		this.leftLowerArm = new AdvancedModelRenderer(this, 8, 0);
		this.leftLowerArm.setRotationPoint(-0.2F, 3.4F, -0.4F);
		this.leftLowerArm.addBox(0.1F, 0.0F, 0.0F, 2, 5, 2, 0.0F);
		this.setRotateAngle(leftLowerArm, -0.9250245035569946F, -0.0F, 0.0F);
		this.leftLeg = new AdvancedModelRenderer(this, 0, 0);
		this.leftLeg.setRotationPoint(1.1F, 3.0F, 2.0F);
		this.leftLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 10, 2, 0.0F);
		this.setRotateAngle(leftLeg, -0.17453292519943295F, -0.0F, 0.0F);
		this.rightUpperArm = new AdvancedModelRenderer(this, 0, 24);
		this.rightUpperArm.mirror = true;
		this.rightUpperArm.setRotationPoint(-2.5F, 1.1F, -6.4F);
		this.rightUpperArm.addBox(-2.0F, 0.0F, -1.0F, 2, 5, 2, 0.0F);
		this.setRotateAngle(rightUpperArm, 0.8916887148439029F, -0.0F, 0.0F);
		this.neck = new AdvancedModelRenderer(this, 46, 36);
		this.neck.setRotationPoint(0.0F, 0.2F, -6.1F);
		this.neck.addBox(-1.5F, -7.0F, -1.5F, 3, 7, 3, 0.0F);
		this.setRotateAngle(neck, 1.0766936155553017F, -0.0F, 0.0F);
		this.crest = new AdvancedModelRenderer(this, 69, 1);
		this.crest.setRotationPoint(0.0F, -1.0F, 0.0F);
		this.crest.addBox(-1.5F, -2.0F, 0.0F, 3, 3, 3, 0.0F);
		this.tail1 = new AdvancedModelRenderer(this, 22, 0);
		this.tail1.setRotationPoint(0.0F, 0.2F, 9.9F);
		this.tail1.addBox(-2.0F, 0.0F, 0.0F, 4, 4, 6, 0.0F);
		this.setRotateAngle(tail1, 0.017453292519943295F, -0.0F, 0.0F);
		this.lowerJaw = new AdvancedModelRenderer(this, 52, 0);
		this.lowerJaw.setRotationPoint(0.0F, -0.6F, -0.7F);
		this.lowerJaw.addBox(-1.0F, 0.0F, -6.0F, 2, 1, 6, 0.0F);
		this.setRotateAngle(lowerJaw, -0.03490658503988659F, -0.0F, 0.0F);
		this.upperJaw = new AdvancedModelRenderer(this, 52, 7);
		this.upperJaw.setRotationPoint(0.0F, -1.7F, -2.8F);
		this.upperJaw.addBox(-1.0F, -1.0F, -4.0F, 2, 2, 4, 0.0F);
		this.setRotateAngle(upperJaw, 0.06981317007977318F, -0.0F, 0.0F);
		this.lowerBody = new AdvancedModelRenderer(this, 3, 36);
		this.lowerBody.setRotationPoint(0.0F, 6.0F, -3.0F);
		this.lowerBody.addBox(-3.5F, 0.0F, 0.0F, 7, 7, 10, 0.0F);
		this.setRotateAngle(lowerBody, -0.056897733615015135F, -0.0F, 0.0F);
		this.rightLeg = new AdvancedModelRenderer(this, 0, 0);
		this.rightLeg.mirror = true;
		this.rightLeg.setRotationPoint(-1.1F, 3.0F, 2.0F);
		this.rightLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 10, 2, 0.0F);
		this.setRotateAngle(rightLeg, -0.17453292519943295F, -0.0F, 0.0F);
		this.neck_1 = new AdvancedModelRenderer(this, 42, 0);
		this.neck_1.setRotationPoint(0.0F, -6.7F, 0.1F);
		this.neck_1.addBox(-1.0F, -9.0F, -1.0F, 2, 9, 2, 0.0F);
		this.setRotateAngle(neck_1, -0.5585053606381855F, 0.0F, 0.0F);
		this.tail2 = new AdvancedModelRenderer(this, 13, 21);
		this.tail2.setRotationPoint(0.0F, 0.2F, 5.9F);
		this.tail2.addBox(-1.5F, 0.0F, 0.0F, 3, 3, 10, 0.0F);
		this.setRotateAngle(tail2, 0.03490658503988659F, -0.0F, 0.0F);
		this.rightUpperArm.addChild(this.rightUpperArmFeather);
		this.leftLowerArm.addChild(this.leftLowerArmFeather);
		this.leftLeg.addChild(this.leftFoot);
		this.rightUpperArm.addChild(this.rightLowerArm);
		this.tail2.addChild(this.tail3);
		this.tail3.addChild(this.tailCrest);
		this.upperBody.addChild(this.leftUpperArm);
		this.neck_1.addChild(this.headPivot);
		this.headPivot.addChild(this.head);
		this.leftUpperArm.addChild(this.leftUpperArmFeather);
		this.rightLowerArm.addChild(this.rightLowerArmFeather);
		this.lowerBody.addChild(this.upperBody);
		this.rightLeg.addChild(this.rightFoot);
		this.leftUpperArm.addChild(this.leftLowerArm);
		this.leftThigh.addChild(this.leftLeg);
		this.upperBody.addChild(this.rightUpperArm);
		this.upperBody.addChild(this.neck);
		this.head.addChild(this.crest);
		this.lowerBody.addChild(this.tail1);
		this.head.addChild(this.lowerJaw);
		this.head.addChild(this.upperJaw);
		this.rightThigh.addChild(this.rightLeg);
		this.neck.addChild(this.neck_1);
		this.tail1.addChild(this.tail2);
		this.updateDefaultPose();
		animator = ModelAnimator.create();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.rightThigh.render(f5);
		this.lowerBody.render(f5);
		this.leftThigh.render(f5);
	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		EntityGallimimus gallimimus = (EntityGallimimus) entity;
		animator.update(entity);
		blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
		this.resetToDefaultPose();
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(gallimimus.SPEAK_ANIMATION);
		animator.startKeyframe(10);
		animator.move(lowerJaw, 0, 0, 0.5F);
		ModelUtils.rotate(animator, lowerJaw, 30, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(gallimimus.ATTACK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -36, 0, 0);
		ModelUtils.rotate(animator, neck_1, -7, 0, 0);
		ModelUtils.rotate(animator, head, 47, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 15, 0, 0);
		ModelUtils.rotate(animator, leftUpperArm, 10, 0, -40);
		ModelUtils.rotate(animator, rightUpperArm, 10, 0, 40);
		ModelUtils.rotate(animator, leftLowerArm, -20, 0, 0);
		ModelUtils.rotate(animator, rightLowerArm, -20, 0, 0);
		animator.endKeyframe();
		animator.startKeyframe(5);
		ModelUtils.rotate(animator, neck, 6, 0, 0);
		ModelUtils.rotate(animator, neck_1, 4, 0, 0);
		ModelUtils.rotate(animator, head, -14, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 15, 0, 0);
		ModelUtils.rotate(animator, leftUpperArm, 10, 0, -40);
		ModelUtils.rotate(animator, rightUpperArm, 10, 0, 40);
		ModelUtils.rotate(animator, leftLowerArm, -20, 0, 0);
		ModelUtils.rotate(animator, rightLowerArm, -20, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(10);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		AdvancedModelRenderer[] tailParts = {this.tail1, this.tail2, this.tail3};
		AdvancedModelRenderer[] neckParts = {this.neck, this.neck_1, this.head};
		AdvancedModelRenderer[] leftArmParts = {this.leftUpperArm, this.leftLowerArm};
		AdvancedModelRenderer[] rightArmParts = {this.rightUpperArm, this.rightLowerArm};
		if (((EntityPrehistoric) entity).isSkeleton() || ((EntityPrehistoric) entity).isAIDisabled()) {
			return;
		}
		ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
		ModelUtils.faceTargetMod(head, f3, f4, 0.5F);

		float speed = 0.1F;
		float speed2 = 0.4F;
		float degree = 0.5F;
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sitProgress;
			sitAnimationRotation(tail3, sitProgress, (float) Math.toRadians(5.22D), 0, 0);
			sitAnimationRotation(lowerBody, sitProgress, -((float) Math.toRadians(2.61D)), 0, 0);
			sitAnimationRotation(leftLowerArm, sitProgress, -((float) Math.toRadians(15.0D)), 0, 0);
			sitAnimationRotation(rightLeg, sitProgress, -((float) Math.toRadians(68.0D)), 0, 0);
			sitAnimationRotation(rightLowerArm, sitProgress, -((float) Math.toRadians(15.0D)), 0, 0);
			sitAnimationRotation(leftFoot, sitProgress, (float) Math.toRadians(68.0D), 0, 0);
			sitAnimationRotation(tail2, sitProgress, (float) Math.toRadians(2.61D), 0, 0);
			sitAnimationRotation(upperBody, sitProgress, (float) Math.toRadians(20.87D), 0, 0);
			sitAnimationRotation(neck, sitProgress, -((float) Math.toRadians(2.61D)), 0, 0);
			sitAnimationRotation(tail1, sitProgress, -((float) Math.toRadians(13.04D)), 0, 0);
			sitAnimationRotation(rightUpperArm, sitProgress, -((float) Math.toRadians(20.0D)), -((float) Math.toRadians(5.0D)), (float) Math.toRadians(44.0D));
			sitAnimationRotation(leftLeg, sitProgress, -((float) Math.toRadians(68.0D)), 0, 0);
			sitAnimationRotation(rightFoot, sitProgress, (float) Math.toRadians(68.0D), 0, 0);
			sitAnimationRotation(leftUpperArm, sitProgress, -((float) Math.toRadians(20.0D)), -((float) Math.toRadians(5.0D)), -((float) Math.toRadians(44.0D)));
			sitAnimationPos(lowerBody, sitProgress, 0F, 14.50F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 16.60F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 16.60F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sleepProgress;
			sitAnimationRotation(lowerBody, sitProgress, -((float) Math.toRadians(2.61D)), 0, 0);
			sitAnimationRotation(rightUpperArm, sitProgress, -((float) Math.toRadians(20.0D)), -((float) Math.toRadians(5.0D)), (float) Math.toRadians(44.0D));
			sitAnimationRotation(neck, sitProgress, (float) Math.toRadians(2.61D), (float) Math.toRadians(31.3D), -((float) Math.toRadians(10.43D)));
			sitAnimationRotation(tail1, sitProgress, -((float) Math.toRadians(13.04D)), 0, 0);
			sitAnimationRotation(head, sitProgress, (float) Math.toRadians(62.61D), 0, 0);
			sitAnimationRotation(leftUpperArm, sitProgress, -((float) Math.toRadians(46.96D)), (float) Math.toRadians(18.26D), -((float) Math.toRadians(60.0D)));
			sitAnimationRotation(tail2, sitProgress, (float) Math.toRadians(2.61D), -((float) Math.toRadians(20.87D)), -((float) Math.toRadians(10.43D)));
			sitAnimationRotation(leftLeg, sitProgress, -((float) Math.toRadians(68.0D)), 0, 0);
			sitAnimationRotation(leftFoot, sitProgress, (float) Math.toRadians(68.0D), 0, 0);
			sitAnimationRotation(rightFoot, sitProgress, (float) Math.toRadians(68.0D), 0, 0);
			sitAnimationRotation(rightLowerArm, sitProgress, -((float) Math.toRadians(15.0D)), 0, 0);
			sitAnimationRotation(tail3, sitProgress, (float) Math.toRadians(5.22D), -((float) Math.toRadians(18.26D)), 0);
			sitAnimationRotation(leftLowerArm, sitProgress, -((float) Math.toRadians(15.0D)), 0, 0);
			sitAnimationRotation(upperBody, sitProgress, (float) Math.toRadians(20.87D), 0, 0);
			sitAnimationRotation(rightLeg, sitProgress, -((float) Math.toRadians(68.0D)), 0, 0);
			sitAnimationPos(lowerBody, sitProgress, 0F, 14.50F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 16.60F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 16.60F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		this.walk(upperBody, speed, degree * 0.05F, false, 1F, 0F, entity.ticksExisted, 1);
		this.bob(lowerBody, speed, degree * 0.5F, false, entity.ticksExisted, 1);
		this.chainWave(tailParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(leftArmParts, speed, degree * -0.15F, -3, entity.ticksExisted, 1);
		this.chainWave(rightArmParts, speed, degree * -0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed2, degree * 0.25F, -3, f, f1);
		this.chainWave(neckParts, speed, degree * 0.05F, 3, entity.ticksExisted, 1);
		this.chainWave(neckParts, speed, degree * 0.15F, 3, f, f1);
		this.walk(leftThigh, speed2, 0.6F, false, 0F, 0.4F, f, f1);
		this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
		this.walk(leftFoot, speed2, -0.6F, true, 2.5F, -0.4F, f, f1);
		this.walk(rightThigh, speed2, 0.6F, true, 0F, -0.4F, f, f1);
		this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
		this.walk(rightFoot, speed2, -0.6F, false, 2.5F, 0.4F, f, f1);
		this.chainWave(neckParts, speed2, degree * 0.5F, 4, f, f1);
		this.chainWave(tailParts, speed2, degree * 0.3F, -4, f, f1);
		((EntityPrehistoric) entity).chainBuffer.applyChainSwingBuffer((ModelRenderer[]) tailParts);
	}
}
