package fossilsarcheology.client.model;

import fossilsarcheology.server.entity.prehistoric.EntityPrehistoric;
import fossilsarcheology.server.entity.prehistoric.EntityTherizinosaurus;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelTherizinosaurus extends ModelPrehistoric {
    public final AdvancedModelRenderer lowerBody;
    public final AdvancedModelRenderer rightThigh;
    public final AdvancedModelRenderer leftThigh;
    public final AdvancedModelRenderer tail1;
    public final AdvancedModelRenderer upperBody;
    public final AdvancedModelRenderer tail2;
    public final AdvancedModelRenderer tail3;
    public final AdvancedModelRenderer Tailfeather1;
    public final AdvancedModelRenderer Tailfeather3;
    public final AdvancedModelRenderer Tailfeather2;
    public final AdvancedModelRenderer leftUpperArm;
    public final AdvancedModelRenderer rightUpperArm;
    public final AdvancedModelRenderer neck;
    public final AdvancedModelRenderer leftLowerArm;
    public final AdvancedModelRenderer leftclaw1;
    public final AdvancedModelRenderer leftclaw2;
    public final AdvancedModelRenderer leftclaw3;
    public final AdvancedModelRenderer rightLowerArm;
    public final AdvancedModelRenderer rightclaw1;
    public final AdvancedModelRenderer rightclaw2;
    public final AdvancedModelRenderer rightclaw3;
    public final AdvancedModelRenderer neck2;
    public final AdvancedModelRenderer head;
    public final AdvancedModelRenderer upperJaw;
    public final AdvancedModelRenderer lowerJaw;
    public final AdvancedModelRenderer upperCrest;
    public final AdvancedModelRenderer lowerCrest;
    public final AdvancedModelRenderer rightLeg;
    public final AdvancedModelRenderer rightFoot;
    public final AdvancedModelRenderer leftLeg;
    public final AdvancedModelRenderer leftFoot;
    private final ModelAnimator animator;

    public ModelTherizinosaurus() {
        this.textureWidth = 128;
        this.textureHeight = 64;
        this.upperBody = new AdvancedModelRenderer(this, 91, 0);
        this.upperBody.setRotationPoint(0.0F, 4.0F, 2.5F);
        this.upperBody.addBox(-3.5F, -4.0F, -10.0F, 7, 9, 10, 0.0F);
        this.setRotateAngle(upperBody, 0.136659280431156F, -0.0F, 0.0F);
        this.Tailfeather2 = new AdvancedModelRenderer(this, 16, 7);
        this.Tailfeather2.mirror = true;
        this.Tailfeather2.setRotationPoint(-0.0F, 0.9F, 1.5F);
        this.Tailfeather2.addBox(-0.51F, -1.5F, -0.1F, 1, 4, 5, 0.0F);
        this.setRotateAngle(Tailfeather2, 0.5009094953223726F, -0.0F, 0.0F);
        this.lowerBody = new AdvancedModelRenderer(this, 57, 20);
        this.lowerBody.setRotationPoint(0.0F, 2.3F, 2.1F);
        this.lowerBody.addBox(-4.5F, 0.0F, 0.0F, 9, 10, 11, 0.0F);
        this.setRotateAngle(lowerBody, -0.5462880558742251F, -0.0F, 0.0F);
        this.leftclaw1 = new AdvancedModelRenderer(this, 34, 33);
        this.leftclaw1.mirror = true;
        this.leftclaw1.setRotationPoint(-0.29F, 5.4F, -1.1F);
        this.leftclaw1.addBox(-0.5F, 0.0F, 0.0F, 1, 5, 1, 0.0F);
        this.setRotateAngle(leftclaw1, 0.3490658503988659F, -0.0F, 0.17453292519943295F);
        this.tail3 = new AdvancedModelRenderer(this, 103, 49);
        this.tail3.setRotationPoint(0.0F, 1.0F, 9.8F);
        this.tail3.addBox(-1.0F, 0.0F, 0.0F, 2, 3, 10, 0.0F);
        this.setRotateAngle(tail3, -0.091106186954104F, -0.0F, 0.0F);
        this.rightLowerArm = new AdvancedModelRenderer(this, 40, 33);
        this.rightLowerArm.mirror = true;
        this.rightLowerArm.setRotationPoint(-1.01F, 5.7F, 0.6F);
        this.rightLowerArm.addBox(-1.0F, 0.0F, -1.2F, 2, 6, 3, 0.0F);
        this.setRotateAngle(rightLowerArm, -0.9424777960769379F, -0.0F, 0.0F);
        this.leftThigh = new AdvancedModelRenderer(this, 2, 17);
        this.leftThigh.mirror = true;
        this.leftThigh.setRotationPoint(2.5F, 9.6F, 7.5F);
        this.leftThigh.addBox(0.0F, -1.0F, -3.0F, 4, 9, 6, 0.0F);
        this.neck2 = new AdvancedModelRenderer(this, 52, 0);
        this.neck2.setRotationPoint(0.0F, 0.2F, -6.7F);
        this.neck2.addBox(-1.5F, -3.0F, -11.7F, 3, 4, 15, 0.0F);
        this.setRotateAngle(neck2, -0.5462880558742251F, -0.0F, 0.0F);
        this.head = new AdvancedModelRenderer(this, 0, 0);
        this.head.setRotationPoint(0.0F, -1.7F, -9.9F);
        this.head.addBox(-2.0F, -2.7F, -6.2F, 4, 4, 6, 0.0F);
        this.setRotateAngle(head, 1.593485607070823F, -0.0F, 0.0F);
        this.upperJaw = new AdvancedModelRenderer(this, 28, 0);
        this.upperJaw.setRotationPoint(0.0F, -0.5F, -4.3F);
        this.upperJaw.addBox(-1.5F, -2.0F, -5.3F, 3, 3, 4, 0.0F);
        this.setRotateAngle(upperJaw, 0.03490658503988659F, -0.0F, 0.0F);
        this.rightUpperArm = new AdvancedModelRenderer(this, 35, 18);
        this.rightUpperArm.mirror = true;
        this.rightUpperArm.setRotationPoint(-2.6F, 2.3F, -9.0F);
        this.rightUpperArm.addBox(-2.5F, 0.0F, -1.0F, 3, 7, 4, 0.0F);
        this.setRotateAngle(rightUpperArm, 0.8726646259971648F, -0.3490658503988659F, -0.13962634015954636F);
        this.rightThigh = new AdvancedModelRenderer(this, 2, 17);
        this.rightThigh.setRotationPoint(-2.5F, 9.6F, 7.5F);
        this.rightThigh.addBox(-4.0F, -1.0F, -3.0F, 4, 9, 6, 0.0F);
        this.rightLeg = new AdvancedModelRenderer(this, 98, 31);
        this.rightLeg.setRotationPoint(-2.5F, 4.5F, 1.1F);
        this.rightLeg.addBox(-1.0F, 0.0F, 0.0F, 2, 9, 3, 0.0F);
        this.setRotateAngle(rightLeg, -0.3270747018237373F, -0.0F, 0.0F);
        this.rightclaw2 = new AdvancedModelRenderer(this, 34, 33);
        this.rightclaw2.mirror = true;
        this.rightclaw2.setRotationPoint(-0.29F, 4.9F, -0.1F);
        this.rightclaw2.addBox(-0.5F, 0.0F, 0.0F, 1, 7, 1, 0.0F);
        this.setRotateAngle(rightclaw2, 0.5235987755982988F, -0.0F, -0.2617993877991494F);
        this.lowerCrest = new AdvancedModelRenderer(this, 16, 7);
        this.lowerCrest.mirror = true;
        this.lowerCrest.setRotationPoint(-0.0F, 0.3F, -1.33F);
        this.lowerCrest.addBox(-0.51F, -1.5F, -0.1F, 1, 3, 5, 0.0F);
        this.setRotateAngle(lowerCrest, -0.6829473363053812F, -0.0F, 0.0F);
        this.rightclaw3 = new AdvancedModelRenderer(this, 34, 33);
        this.rightclaw3.mirror = true;
        this.rightclaw3.setRotationPoint(0.09F, 4.5F, 0.8F);
        this.rightclaw3.addBox(-0.5F, 0.0F, 0.0F, 1, 6, 1, 0.0F);
        this.setRotateAngle(rightclaw3, 0.7853981633974483F, -0.0F, -0.3490658503988659F);
        this.tail2 = new AdvancedModelRenderer(this, 70, 45);
        this.tail2.setRotationPoint(0.0F, 0.8F, 4.9F);
        this.tail2.addBox(-2.0F, 0.0F, -0.6F, 4, 5, 11, 0.0F);
        this.setRotateAngle(tail2, 0.091106186954104F, -0.0F, 0.0F);
        this.leftclaw2 = new AdvancedModelRenderer(this, 34, 33);
        this.leftclaw2.mirror = true;
        this.leftclaw2.setRotationPoint(0.29F, 4.9F, -0.1F);
        this.leftclaw2.addBox(-0.5F, 0.0F, 0.0F, 1, 7, 1, 0.0F);
        this.setRotateAngle(leftclaw2, 0.5235987755982988F, -0.0F, 0.2617993877991494F);
        this.rightclaw1 = new AdvancedModelRenderer(this, 34, 33);
        this.rightclaw1.mirror = true;
        this.rightclaw1.setRotationPoint(0.29F, 5.4F, -1.1F);
        this.rightclaw1.addBox(-0.5F, 0.0F, 0.0F, 1, 5, 1, 0.0F);
        this.setRotateAngle(rightclaw1, 0.3490658503988659F, -0.0F, -0.17453292519943295F);
        this.leftLowerArm = new AdvancedModelRenderer(this, 40, 33);
        this.leftLowerArm.setRotationPoint(1.01F, 5.7F, 0.6F);
        this.leftLowerArm.addBox(-1.0F, 0.0F, -1.2F, 2, 6, 3, 0.0F);
        this.setRotateAngle(leftLowerArm, -0.9424777960769379F, -0.0F, 0.0F);
        this.leftclaw3 = new AdvancedModelRenderer(this, 34, 33);
        this.leftclaw3.mirror = true;
        this.leftclaw3.setRotationPoint(0.09F, 4.5F, 0.8F);
        this.leftclaw3.addBox(-0.5F, 0.0F, 0.0F, 1, 6, 1, 0.0F);
        this.setRotateAngle(leftclaw3, 0.7853981633974483F, -0.0F, 0.3490658503988659F);
        this.upperCrest = new AdvancedModelRenderer(this, 16, 7);
        this.upperCrest.mirror = true;
        this.upperCrest.setRotationPoint(-0.0F, -0.6F, -1.43F);
        this.upperCrest.addBox(-0.5F, -2.1F, -0.2F, 1, 4, 5, 0.0F);
        this.leftLeg = new AdvancedModelRenderer(this, 98, 31);
        this.leftLeg.setRotationPoint(2.5F, 4.5F, 1.1F);
        this.leftLeg.addBox(-1.0F, 0.0F, 0.0F, 2, 9, 3, 0.0F);
        this.setRotateAngle(leftLeg, -0.3270747018237373F, -0.0F, 0.0F);
        this.leftFoot = new AdvancedModelRenderer(this, 3, 45);
        this.leftFoot.setRotationPoint(0.0F, 8.0F, 1.0F);
        this.leftFoot.addBox(-1.5F, 0.0F, -4.0F, 3, 2, 5, 0.0F);
        this.setRotateAngle(leftFoot, 0.33161255787892263F, -0.0F, 0.0F);
        this.neck = new AdvancedModelRenderer(this, 45, 0);
        this.neck.setRotationPoint(0.0F, 0.0F, -7.6F);
        this.neck.addBox(-2.0F, -3.0F, -6.6F, 4, 6, 5, 0.0F);
        this.setRotateAngle(neck, -0.27314402793711257F, -0.0F, 0.0F);
        this.Tailfeather1 = new AdvancedModelRenderer(this, 16, 7);
        this.Tailfeather1.mirror = true;
        this.Tailfeather1.setRotationPoint(-0.0F, 1.1F, 6.97F);
        this.Tailfeather1.addBox(-0.51F, -1.5F, -0.1F, 1, 4, 5, 0.0F);
        this.setRotateAngle(Tailfeather1, 0.5009094953223726F, -0.0F, 0.0F);
        this.lowerJaw = new AdvancedModelRenderer(this, 27, 12);
        this.lowerJaw.setRotationPoint(0.0F, 0.4F, -5.5F);
        this.lowerJaw.addBox(-1.5F, 0.0F, -3.9F, 3, 1, 4, 0.0F);
        this.setRotateAngle(lowerJaw, -0.091106186954104F, -0.0F, 0.0F);
        this.tail1 = new AdvancedModelRenderer(this, 36, 47);
        this.tail1.setRotationPoint(0.0F, 0.4F, 9.4F);
        this.tail1.addBox(-3.0F, 0.0F, 0.0F, 6, 7, 6, 0.0F);
        this.setRotateAngle(tail1, 0.22759093446006054F, -0.0F, 0.0F);
        this.Tailfeather3 = new AdvancedModelRenderer(this, 16, 7);
        this.Tailfeather3.mirror = true;
        this.Tailfeather3.setRotationPoint(-0.0F, 0.8F, 6.87F);
        this.Tailfeather3.addBox(-0.51F, -1.5F, -0.1F, 1, 4, 5, 0.0F);
        this.setRotateAngle(Tailfeather3, 0.27314402793711257F, -0.0F, 0.0F);
        this.rightFoot = new AdvancedModelRenderer(this, 3, 45);
        this.rightFoot.setRotationPoint(0.0F, 8.0F, 1.0F);
        this.rightFoot.addBox(-1.5F, 0.0F, -4.0F, 3, 2, 5, 0.0F);
        this.setRotateAngle(rightFoot, 0.33161255787892263F, -0.0F, 0.0F);
        this.leftUpperArm = new AdvancedModelRenderer(this, 35, 18);
        this.leftUpperArm.setRotationPoint(2.6F, 2.3F, -9.0F);
        this.leftUpperArm.addBox(-0.5F, 0.0F, -1.0F, 3, 7, 4, 0.0F);
        this.setRotateAngle(leftUpperArm, 0.8726646259971648F, 0.3490658503988659F, 0.13962634015954636F);
        this.lowerBody.addChild(this.upperBody);
        this.tail3.addChild(this.Tailfeather2);
        this.leftLowerArm.addChild(this.leftclaw1);
        this.tail2.addChild(this.tail3);
        this.rightUpperArm.addChild(this.rightLowerArm);
        this.neck.addChild(this.neck2);
        this.neck2.addChild(this.head);
        this.head.addChild(this.upperJaw);
        this.upperBody.addChild(this.rightUpperArm);
        this.rightThigh.addChild(this.rightLeg);
        this.rightLowerArm.addChild(this.rightclaw2);
        this.head.addChild(this.lowerCrest);
        this.rightLowerArm.addChild(this.rightclaw3);
        this.tail1.addChild(this.tail2);
        this.leftLowerArm.addChild(this.leftclaw2);
        this.rightLowerArm.addChild(this.rightclaw1);
        this.leftUpperArm.addChild(this.leftLowerArm);
        this.leftLowerArm.addChild(this.leftclaw3);
        this.head.addChild(this.upperCrest);
        this.leftThigh.addChild(this.leftLeg);
        this.leftLeg.addChild(this.leftFoot);
        this.upperBody.addChild(this.neck);
        this.tail2.addChild(this.Tailfeather1);
        this.head.addChild(this.lowerJaw);
        this.lowerBody.addChild(this.tail1);
        this.tail3.addChild(this.Tailfeather3);
        this.rightLeg.addChild(this.rightFoot);
        this.upperBody.addChild(this.leftUpperArm);
        this.updateDefaultPose();
        animator = ModelAnimator.create();
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
        this.lowerBody.render(f5);
        this.leftThigh.render(f5);
        this.rightThigh.render(f5);
    }

    public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        EntityPrehistoric prehistoric = (EntityPrehistoric) entity;
        animator.update(entity);
        blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
        this.resetToDefaultPose();
        setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
        animator.setAnimation(prehistoric.SPEAK_ANIMATION);
        animator.startKeyframe(10);
        ModelUtils.rotate(animator, neck2, -10, 0, 0);
        ModelUtils.rotate(animator, head, -10, 0, 0);
        ModelUtils.rotate(animator, lowerJaw, 36, 0, 0);
        animator.endKeyframe();
        animator.resetKeyframe(10);
        animator.setAnimation(prehistoric.ATTACK_ANIMATION);
        animator.startKeyframe(10);
        ModelUtils.rotate(animator, upperBody, 0, -10, -10);
        ModelUtils.rotate(animator, rightUpperArm, 0, 15, 0);
        ModelUtils.rotate(animator, leftUpperArm, 0, 13, -80);
        animator.endKeyframe();
        animator.startKeyframe(5);
        ModelUtils.rotate(animator, upperBody, 0, 20, -10);
        ModelUtils.rotate(animator, rightUpperArm, 20, -30, 15);
        ModelUtils.rotate(animator, leftUpperArm, -5, -20, 20);
        ModelUtils.rotate(animator, leftUpperArm, 0, 0, 20);
        animator.endKeyframe();
        animator.resetKeyframe(10);
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
        AdvancedModelRenderer[] tailParts = {this.tail1, this.tail2, this.tail3};
        AdvancedModelRenderer[] neckParts = {this.neck, this.head};
        AdvancedModelRenderer[] leftArmParts = {this.leftUpperArm, this.leftLowerArm};
        AdvancedModelRenderer[] rightArmParts = {this.rightUpperArm, this.rightLowerArm};
        if (((EntityPrehistoric) entity).isSkeleton() || ((EntityPrehistoric) entity).isAIDisabled()) {
            return;
        }
        EntityTherizinosaurus dino = (EntityTherizinosaurus) entity;
        head.rotateAngleZ += (f3 / (180f / (float) Math.PI)) * 0.5F;
        head.rotateAngleX += (f4 / (180f / (float) Math.PI)) * 0.5F;
        ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
        float speed = 0.1F;
        float speed2 = 0.5F;
        float degree = 0.5F;
        {
            float sitProgress = dino.sitProgress;
            sitAnimationRotationPrev(lowerJaw, sitProgress, -((float) Math.toRadians(5.22D)), 0, 0);
            sitAnimationRotationPrev(rightThigh, sitProgress, -((float) Math.toRadians(35.0D)), 0, 0);
            sitAnimationRotationPrev(tail3, sitProgress, (float) Math.toRadians(10.43D), 0, 0);
            sitAnimationRotationPrev(Tailfeather1, sitProgress, (float) Math.toRadians(28.7D), 0, 0);
            sitAnimationRotationPrev(Tailfeather2, sitProgress, (float) Math.toRadians(28.7D), 0, 0);
            sitAnimationRotationPrev(head, sitProgress, (float) Math.toRadians(91.3D), 0, 0);
            sitAnimationRotationPrev(neck, sitProgress, -((float) Math.toRadians(15.65D)), 0, 0);
            sitAnimationRotationPrev(rightclaw3, sitProgress, (float) Math.toRadians(45.0D), 0, -((float) Math.toRadians(20.0D)));
            sitAnimationRotationPrev(leftFoot, sitProgress, (float) Math.toRadians(86.09D), 0, 0);
            sitAnimationRotationPrev(tail2, sitProgress, (float) Math.toRadians(15.65D), 0, 0);
            sitAnimationRotationPrev(rightUpperArm, sitProgress, (float) Math.toRadians(50.0D), -((float) Math.toRadians(20.0D)), (float) Math.toRadians(30.0D));
            sitAnimationRotationPrev(rightFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
            sitAnimationRotationPrev(rightclaw1, sitProgress, (float) Math.toRadians(20.0D), 0, -((float) Math.toRadians(10.0D)));
            sitAnimationRotationPrev(rightclaw2, sitProgress, (float) Math.toRadians(30.0D), 0, -((float) Math.toRadians(15.0D)));
            sitAnimationRotationPrev(leftLeg, sitProgress, -((float) Math.toRadians(50.0D)), 0, 0);
            sitAnimationRotationPrev(Tailfeather3, sitProgress, (float) Math.toRadians(15.65D), 0, 0);
            sitAnimationRotationPrev(lowerBody, sitProgress, -((float) Math.toRadians(31.3D)), 0, 0);
            sitAnimationRotationPrev(tail1, sitProgress, (float) Math.toRadians(2.61D), 0, 0);
            sitAnimationRotationPrev(rightLowerArm, sitProgress, -((float) Math.toRadians(54.0D)), 0, (float) Math.toRadians(15.0D));
            sitAnimationRotationPrev(leftclaw2, sitProgress, (float) Math.toRadians(30.0D), 0, (float) Math.toRadians(15.0D));
            sitAnimationRotationPrev(rightLeg, sitProgress, -((float) Math.toRadians(50.0D)), 0, 0);
            sitAnimationRotationPrev(neck2, sitProgress, -((float) Math.toRadians(31.3D)), 0, 0);
            sitAnimationRotationPrev(leftclaw3, sitProgress, (float) Math.toRadians(45.0D), 0, (float) Math.toRadians(20.0D));
            sitAnimationRotationPrev(leftclaw1, sitProgress, (float) Math.toRadians(20.0D), 0, (float) Math.toRadians(10.0D));
            sitAnimationRotationPrev(leftUpperArm, sitProgress, (float) Math.toRadians(50.0D), (float) Math.toRadians(20.0D), -((float) Math.toRadians(30.0D)));
            sitAnimationRotationPrev(upperBody, sitProgress, (float) Math.toRadians(7.83D), 0, 0);
            sitAnimationRotationPrev(upperJaw, sitProgress, (float) Math.toRadians(2.0D), 0, 0);
            sitAnimationRotationPrev(leftLowerArm, sitProgress, -((float) Math.toRadians(54.0D)), 0, -((float) Math.toRadians(15.0D)));
            sitAnimationRotationPrev(lowerCrest, sitProgress, -((float) Math.toRadians(39.13D)), 0, 0);
            sitAnimationRotationPrev(leftThigh, sitProgress, -((float) Math.toRadians(35.0D)), 0, 0);
            sitAnimationPos(lowerBody, sitProgress, 0, 7.4F, 0);
            sitAnimationPos(rightThigh, sitProgress, 0, 6.6F, 0);
            sitAnimationPos(leftThigh, sitProgress, 0, 6.6F, 0);
        }
        {
            float sitProgress = dino.sleepProgress;
            sitAnimationRotationPrev(rightUpperArm, sitProgress, (float) Math.toRadians(50.0D), -((float) Math.toRadians(20.0D)), (float) Math.toRadians(50.0D));
            sitAnimationRotationPrev(tail2, sitProgress, (float) Math.toRadians(13.04D), (float) Math.toRadians(20.87D), (float) Math.toRadians(7.83D));
            sitAnimationRotationPrev(leftclaw3, sitProgress, (float) Math.toRadians(45.0D), 0, (float) Math.toRadians(20.0D));
            sitAnimationRotationPrev(lowerBody, sitProgress, -((float) Math.toRadians(13.04D)), 0, 0);
            sitAnimationRotationPrev(rightThigh, sitProgress, -((float) Math.toRadians(35.0D)), 0, 0);
            sitAnimationRotationPrev(Tailfeather1, sitProgress, (float) Math.toRadians(28.7D), 0, 0);
            sitAnimationRotationPrev(neck2, sitProgress, -((float) Math.toRadians(73.04D)), 0, 0);
            sitAnimationRotationPrev(leftLowerArm, sitProgress, -((float) Math.toRadians(54.0D)), 0, -((float) Math.toRadians(15.0D)));
            sitAnimationRotationPrev(lowerJaw, sitProgress, -((float) Math.toRadians(5.22D)), 0, 0);
            sitAnimationRotationPrev(tail1, sitProgress, -((float) Math.toRadians(13.04D)), 0, 0);
            sitAnimationRotationPrev(Tailfeather2, sitProgress, (float) Math.toRadians(28.7D), 0, 0);
            sitAnimationRotationPrev(rightFoot, sitProgress, (float) Math.toRadians(86.0D), 0, 0);
            sitAnimationRotationPrev(leftThigh, sitProgress, -((float) Math.toRadians(35.0D)), 0, 0);
            sitAnimationRotationPrev(leftLeg, sitProgress, -((float) Math.toRadians(50.0D)), 0, 0);
            sitAnimationRotationPrev(leftFoot, sitProgress, (float) Math.toRadians(86.09D), 0, 0);
            sitAnimationRotationPrev(rightclaw1, sitProgress, (float) Math.toRadians(20.0D), 0, -((float) Math.toRadians(10.0D)));
            sitAnimationRotationPrev(Tailfeather3, sitProgress, (float) Math.toRadians(15.65D), 0, 0);
            sitAnimationRotationPrev(lowerCrest, sitProgress, -((float) Math.toRadians(39.13D)), 0, 0);
            sitAnimationRotationPrev(tail3, sitProgress, (float) Math.toRadians(10.43D), (float) Math.toRadians(13.04D), (float) Math.toRadians(7.83D));
            sitAnimationRotationPrev(rightLeg, sitProgress, -((float) Math.toRadians(50.0D)), 0, 0);
            sitAnimationRotationPrev(neck, sitProgress, -((float) Math.toRadians(49.57D)), 0, 0);
            sitAnimationRotationPrev(head, sitProgress, (float) Math.toRadians(106.96D), 0, (float) Math.toRadians(20.87D));
            sitAnimationRotationPrev(rightclaw3, sitProgress, (float) Math.toRadians(45.0D), 0, -((float) Math.toRadians(20.0D)));
            sitAnimationRotationPrev(upperJaw, sitProgress, (float) Math.toRadians(2.0D), 0, 0);
            sitAnimationRotationPrev(rightclaw2, sitProgress, (float) Math.toRadians(30.0D), 0, -((float) Math.toRadians(15.0D)));
            sitAnimationRotationPrev(leftclaw1, sitProgress, (float) Math.toRadians(20.0D), 0, (float) Math.toRadians(10.0D));
            sitAnimationRotationPrev(upperBody, sitProgress, (float) Math.toRadians(13.04D), 0, 0);
            sitAnimationRotationPrev(leftUpperArm, sitProgress, (float) Math.toRadians(50.0D), (float) Math.toRadians(20.0D), -((float) Math.toRadians(50.0D)));
            sitAnimationRotationPrev(leftclaw2, sitProgress, (float) Math.toRadians(30.0D), 0, (float) Math.toRadians(15.0D));
            sitAnimationRotationPrev(rightLowerArm, sitProgress, -((float) Math.toRadians(54.0D)), 0, (float) Math.toRadians(15.0D));
            sitAnimationPos(lowerBody, sitProgress, 0, 7.4F, 0);
            sitAnimationPos(rightThigh, sitProgress, 0, 6.6F, 0);
            sitAnimationPos(leftThigh, sitProgress, 0, 6.6F, 0);
        }
        this.bob(lowerBody, speed, degree * 0.7F, false, f2, 1);
        this.walk(upperBody, speed, degree * 0.1F, false, 0, 0, f2, 1);
        this.chainWave(tailParts, speed, degree * 0.05F, -3, f2, 1);
        this.chainWave(leftArmParts, speed, degree * 0.1F, -2, f2, 1);
        this.chainWave(rightArmParts, speed, degree * 0.1F, -2, f2, 1);
        this.chainSwing(tailParts, speed, degree * 0.15F, -3, f2, 1);
        this.chainSwing(tailParts, speed2, degree * 0.25F, -3, f, f1);
        this.chainWave(neckParts, speed, degree * 0.15F, 3, f2, 1);
        this.walk(leftThigh, speed2, 0.6F, false, 0F, 0.4F, f, f1);
        this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
        this.walk(leftFoot, speed2, -0.6F, true, 2.5F, -0.4F, f, f1);
        this.walk(rightThigh, speed2, 0.6F, true, 0F, -0.4F, f, f1);
        this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
        this.walk(rightFoot, speed2, -0.6F, false, 2.5F, 0.4F, f, f1);
        this.chainWave(neckParts, speed2, degree * 0.5F, 4, f, f1);
        this.chainWave(tailParts, speed2, degree * 0.3F, -4, f, f1);
        ((EntityPrehistoric) entity).chainBuffer.applyChainSwingBuffer(tailParts);
    }

}
