package fossilsarcheology.client.model;

import fossilsarcheology.server.entity.prehistoric.EntityPrehistoric;
import fossilsarcheology.server.entity.prehistoric.EntityVelociraptor;
import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;

public class ModelVelociraptor extends ModelPrehistoric {
	public AdvancedModelRenderer lowerBody;
	public AdvancedModelRenderer leftThigh;
	public AdvancedModelRenderer rightThigh;
	public AdvancedModelRenderer upperBody;
	public AdvancedModelRenderer tail1;
	public AdvancedModelRenderer neck;
	public AdvancedModelRenderer rightUpperArm;
	public AdvancedModelRenderer leftUpperArm;
	public AdvancedModelRenderer head;
	public AdvancedModelRenderer upperJaw;
	public AdvancedModelRenderer lowerJaw;
	public AdvancedModelRenderer upperCrest;
	public AdvancedModelRenderer lowerCrest;
	public AdvancedModelRenderer rightLowerArm;
	public AdvancedModelRenderer rightLowerArmWing;
	public AdvancedModelRenderer rightLowerArmWing2;
	public AdvancedModelRenderer leftLowerArm;
	public AdvancedModelRenderer leftLowerArmWing;
	public AdvancedModelRenderer leftLowerArmWing2;
	public AdvancedModelRenderer tail2;
	public AdvancedModelRenderer tailFeather4;
	public AdvancedModelRenderer tail3;
	public AdvancedModelRenderer rightToeClaw2;
	public AdvancedModelRenderer tailFeather3;
	public AdvancedModelRenderer tailFeather1;
	public AdvancedModelRenderer tailFeather2;
	public AdvancedModelRenderer leftLeg;
	public AdvancedModelRenderer leftFoot;
	public AdvancedModelRenderer leftToeClaw1;
	public AdvancedModelRenderer leftToeClaw2;
	public AdvancedModelRenderer rightLeg;
	public AdvancedModelRenderer rightFoot;
	public AdvancedModelRenderer rightToeClaw1;
	public AdvancedModelRenderer rightToeClaw2_1;
	public ModelAnimator animator;
	public ModelVelociraptor() {
		this.textureWidth = 128;
		this.textureHeight = 64;
		this.rightFoot = new AdvancedModelRenderer(this, 0, 34);
		this.rightFoot.setRotationPoint(-0.2F, 0.9F, -6.3F);
		this.rightFoot.addBox(-1.5F, 0.0F, -3.0F, 3, 2, 4, 0.0F);
		this.setRotateAngle(rightFoot, -1.1838568316277536F, -0.0F, 0.0F);
		this.head = new AdvancedModelRenderer(this, 1, 1);
		this.head.setRotationPoint(0.5F, -1.8F, -8.23F);
		this.head.addBox(-3.0F, -2.0F, -4.0F, 5, 5, 5, 0.0F);
		this.setRotateAngle(head, 1.5025539530419183F, 0.0F, 0.0F);
		this.rightLeg = new AdvancedModelRenderer(this, 2, 25);
		this.rightLeg.setRotationPoint(-1.3F, 2.2F, 2.2F);
		this.rightLeg.addBox(-1.0F, 0.4F, -7.2F, 2, 2, 7, 0.0F);
		this.setRotateAngle(rightLeg, 1.2292353921796064F, -0.0F, 0.0F);
		this.leftLeg = new AdvancedModelRenderer(this, 2, 25);
		this.leftLeg.mirror = true;
		this.leftLeg.setRotationPoint(1.3F, 2.2F, 2.2F);
		this.leftLeg.addBox(-1.0F, 0.4F, -7.2F, 2, 2, 7, 0.0F);
		this.setRotateAngle(leftLeg, 1.2292353921796064F, -0.0F, 0.0F);
		this.leftFoot = new AdvancedModelRenderer(this, 0, 34);
		this.leftFoot.setRotationPoint(0.2F, 0.9F, -6.3F);
		this.leftFoot.addBox(-1.5F, 0.0F, -3.1F, 3, 2, 4, 0.0F);
		this.setRotateAngle(leftFoot, -1.2292353921796064F, -0.0F, 0.0F);
		this.rightToeClaw1 = new AdvancedModelRenderer(this, 0, 40);
		this.rightToeClaw1.setRotationPoint(0.9F, 0.2F, -1.2F);
		this.rightToeClaw1.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(rightToeClaw1, -0.8726646259971648F, -0.0F, 0.0F);
		this.rightLowerArm = new AdvancedModelRenderer(this, 99, 15);
		this.rightLowerArm.mirror = true;
		this.rightLowerArm.setRotationPoint(1.2F, 2.0F, 2.8F);
		this.rightLowerArm.addBox(-1.1F, 0.5F, -8.8F, 2, 2, 6, 0.0F);
		this.setRotateAngle(rightLowerArm, 0.091106186954104F, -0.0F, 0.0F);
		this.lowerJaw = new AdvancedModelRenderer(this, 49, 0);
		this.lowerJaw.setRotationPoint(0.0F, 1.7F, -3.83F);
		this.lowerJaw.addBox(-2.0F, -0.5F, -6.9F, 3, 1, 7, 0.0F);
		this.setRotateAngle(lowerJaw, -0.22759093446006054F, 0.0F, 0.0F);
		this.tail1 = new AdvancedModelRenderer(this, 106, 1);
		this.tail1.setRotationPoint(0.0F, 0.4F, 8.5F);
		this.tail1.addBox(-2.0F, -1.0F, -0.6F, 4, 5, 6, 0.0F);
		this.setRotateAngle(tail1, 0.13962634015954636F, -0.0F, 0.0F);
		this.rightLowerArmWing2 = new AdvancedModelRenderer(this, 20, 15);
		this.rightLowerArmWing2.setRotationPoint(0.5F, 2.9F, -7.1F);
		this.rightLowerArmWing2.addBox(-0.55F, -0.5F, -2.0F, 1, 6, 4, 0.0F);
		this.setRotateAngle(rightLowerArmWing2, -0.20943951023931953F, -0.0F, 0.0F);
		this.tailFeather2 = new AdvancedModelRenderer(this, 35, 51);
		this.tailFeather2.setRotationPoint(0.0F, -0.2F, -1.3F);
		this.tailFeather2.addBox(-4.0F, 0.5F, 0.1F, 8, 1, 12, 0.0F);
		this.setRotateAngle(tailFeather2, -0.004886921905584123F, -0.0F, 0.0F);
		this.tailFeather4 = new AdvancedModelRenderer(this, 46, 41);
		this.tailFeather4.setRotationPoint(0.0F, 0.0F, 0.0F);
		this.tailFeather4.addBox(-3.5F, 0.1F, 0.0F, 7, 1, 6, 0.0F);
		this.rightToeClaw2_1 = new AdvancedModelRenderer(this, 0, 40);
		this.rightToeClaw2_1.setRotationPoint(0.0F, 0.2F, -2.5F);
		this.rightToeClaw2_1.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 1, 0.0F);
		this.setRotateAngle(rightToeClaw2_1, -1.7627825445142729F, -0.0F, 0.0F);
		this.rightUpperArm = new AdvancedModelRenderer(this, 115, 21);
		this.rightUpperArm.mirror = true;
		this.rightUpperArm.setRotationPoint(2.0F, 2.3F, -3.5F);
		this.rightUpperArm.addBox(0.0F, -1.0F, -1.0F, 2, 6, 3, 0.0F);
		this.setRotateAngle(rightUpperArm, 1.1383037381507017F, 0.22759093446006054F, -0.4553564018453205F);
		this.tail3 = new AdvancedModelRenderer(this, 39, 12);
		this.tail3.setRotationPoint(0.0F, -0.8F, 7.3F);
		this.tail3.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 17, 0.0F);
		this.setRotateAngle(tail3, -0.06981317007977318F, -0.0F, 0.0F);
		this.leftLowerArm = new AdvancedModelRenderer(this, 99, 15);
		this.leftLowerArm.mirror = true;
		this.leftLowerArm.setRotationPoint(-1.2F, 2.0F, 2.8F);
		this.leftLowerArm.addBox(-0.9F, 0.5F, -8.8F, 2, 2, 6, 0.0F);
		this.setRotateAngle(leftLowerArm, 0.091106186954104F, -0.0F, 0.0F);
		this.leftToeClaw2 = new AdvancedModelRenderer(this, 0, 40);
		this.leftToeClaw2.setRotationPoint(0.0F, 0.2F, -2.5F);
		this.leftToeClaw2.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 1, 0.0F);
		this.setRotateAngle(leftToeClaw2, -1.7627825445142729F, -0.0F, 0.0F);
		this.upperJaw = new AdvancedModelRenderer(this, 28, 0);
		this.upperJaw.setRotationPoint(0.0F, 0.6F, -3.93F);
		this.upperJaw.addBox(-2.0F, -2.4F, -6.7F, 3, 3, 7, 0.0F);
		this.setRotateAngle(upperJaw, -0.136659280431156F, -0.0F, 0.0F);
		this.tailFeather1 = new AdvancedModelRenderer(this, 68, 41);
		this.tailFeather1.setRotationPoint(0.0F, -0.2F, 1.5F);
		this.tailFeather1.addBox(-4.5F, 0.5F, 9.1F, 9, 1, 11, 0.0F);
		this.setRotateAngle(tailFeather1, -0.004886921905584123F, -0.0F, 0.0F);
		this.lowerCrest = new AdvancedModelRenderer(this, 38, 15);
		this.lowerCrest.setRotationPoint(-0.5F, 0.3F, -2.03F);
		this.lowerCrest.addBox(-0.5F, -1.5F, 0.6F, 1, 4, 5, 0.0F);
		this.rightToeClaw2 = new AdvancedModelRenderer(this, 0, 40);
		this.rightToeClaw2.setRotationPoint(0.0F, 0.2F, -2.5F);
		this.rightToeClaw2.addBox(-0.5F, -0.5F, 0.0F, 1, 1, 1, 0.0F);
		this.setRotateAngle(rightToeClaw2, -1.7627825445142729F, -0.0F, 0.0F);
		this.rightThigh = new AdvancedModelRenderer(this, 14, 35);
		this.rightThigh.setRotationPoint(-2.5F, 14.0F, 3.0F);
		this.rightThigh.addBox(-3.0F, -2.5F, -2.0F, 3, 7, 5, 0.0F);
		this.leftUpperArm = new AdvancedModelRenderer(this, 115, 21);
		this.leftUpperArm.setRotationPoint(-2.0F, 2.3F, -3.5F);
		this.leftUpperArm.addBox(-2.0F, -1.0F, -1.0F, 2, 6, 3, 0.0F);
		this.setRotateAngle(leftUpperArm, 1.1383037381507017F, -0.22759093446006054F, 0.4553564018453205F);
		this.leftLowerArmWing = new AdvancedModelRenderer(this, 109, 51);
		this.leftLowerArmWing.mirror = true;
		this.leftLowerArmWing.setRotationPoint(-0.5F, -0.3F, 0.5F);
		this.leftLowerArmWing.addBox(-0.5F, 0.0F, -8.0F, 1, 5, 6, 0.0F);
		this.setRotateAngle(leftLowerArmWing, 0.31869712141416456F, -0.0F, 0.0F);
		this.upperCrest = new AdvancedModelRenderer(this, 38, 15);
		this.upperCrest.mirror = true;
		this.upperCrest.setRotationPoint(-0.51F, -0.5F, -3.03F);
		this.upperCrest.addBox(-0.5F, -1.5F, 0.6F, 1, 4, 5, 0.0F);
		this.setRotateAngle(upperCrest, 0.136659280431156F, -0.0F, 0.0F);
		this.leftToeClaw1 = new AdvancedModelRenderer(this, 0, 40);
		this.leftToeClaw1.setRotationPoint(-0.9F, 0.2F, -1.2F);
		this.leftToeClaw1.addBox(-0.5F, -0.5F, -3.0F, 1, 1, 3, 0.0F);
		this.setRotateAngle(leftToeClaw1, -0.8726646259971648F, -0.0F, 0.0F);
		this.tail2 = new AdvancedModelRenderer(this, 80, 26);
		this.tail2.setRotationPoint(0.0F, 0.2F, 4.8F);
		this.tail2.addBox(-1.5F, -1.0F, 0.0F, 3, 3, 9, 0.0F);
		this.setRotateAngle(tail2, 0.03490658503988659F, 0.0F, 0.0F);
		this.upperBody = new AdvancedModelRenderer(this, 98, 34);
		this.upperBody.setRotationPoint(0.0F, 1.1F, -0.5F);
		this.upperBody.addBox(-3.0F, -1.8F, -5.5F, 6, 7, 7, 0.0F);
		this.setRotateAngle(upperBody, 0.19338248112097173F, -0.0F, 0.0F);
		this.leftLowerArmWing2 = new AdvancedModelRenderer(this, 20, 15);
		this.leftLowerArmWing2.mirror = true;
		this.leftLowerArmWing2.setRotationPoint(-0.5F, 2.9F, -7.1F);
		this.leftLowerArmWing2.addBox(-0.45F, -0.5F, -2.0F, 1, 6, 4, 0.0F);
		this.setRotateAngle(leftLowerArmWing2, -0.20943951023931953F, -0.0F, 0.0F);
		this.rightLowerArmWing = new AdvancedModelRenderer(this, 109, 51);
		this.rightLowerArmWing.setRotationPoint(0.5F, -0.3F, 0.5F);
		this.rightLowerArmWing.addBox(-0.5F, 0.0F, -8.0F, 1, 5, 6, 0.0F);
		this.setRotateAngle(rightLowerArmWing, 0.31869712141416456F, -0.0F, 0.0F);
		this.tailFeather3 = new AdvancedModelRenderer(this, 44, 39);
		this.tailFeather3.setRotationPoint(0.0F, 0.0F, 0.0F);
		this.tailFeather3.addBox(-3.5F, 0.0F, -0.9F, 7, 1, 8, 0.0F);
		this.setRotateAngle(tailFeather3, 0.045553093477052F, -0.0F, 0.0F);
		this.leftThigh = new AdvancedModelRenderer(this, 14, 35);
		this.leftThigh.mirror = true;
		this.leftThigh.setRotationPoint(2.5F, 14.0F, 3.0F);
		this.leftThigh.addBox(0.0F, -2.5F, -2.0F, 3, 7, 5, 0.0F);
		this.lowerBody = new AdvancedModelRenderer(this, 66, 9);
		this.lowerBody.setRotationPoint(0.0F, 8.9F, -1.9F);
		this.lowerBody.addBox(-3.5F, -1.0F, 0.0F, 7, 8, 9, 0.0F);
		this.setRotateAngle(lowerBody, -0.091106186954104F, 0.0F, 0.0F);
		this.neck = new AdvancedModelRenderer(this, 1, 48);
		this.neck.setRotationPoint(0.0F, 1.6F, -4.5F);
		this.neck.addBox(-2.0F, -3.0F, -9.0F, 4, 5, 11, 0.0F);
		this.setRotateAngle(neck, -1.0927506446736497F, -0.0F, 0.0F);
		this.rightLeg.addChild(this.rightFoot);
		this.neck.addChild(this.head);
		this.rightThigh.addChild(this.rightLeg);
		this.leftThigh.addChild(this.leftLeg);
		this.leftLeg.addChild(this.leftFoot);
		this.rightFoot.addChild(this.rightToeClaw1);
		this.rightUpperArm.addChild(this.rightLowerArm);
		this.head.addChild(this.lowerJaw);
		this.lowerBody.addChild(this.tail1);
		this.rightLowerArm.addChild(this.rightLowerArmWing2);
		this.tail3.addChild(this.tailFeather2);
		this.tail1.addChild(this.tailFeather4);
		this.rightToeClaw1.addChild(this.rightToeClaw2_1);
		this.upperBody.addChild(this.rightUpperArm);
		this.tail2.addChild(this.tail3);
		this.leftUpperArm.addChild(this.leftLowerArm);
		this.leftToeClaw1.addChild(this.leftToeClaw2);
		this.head.addChild(this.upperJaw);
		this.tail3.addChild(this.tailFeather1);
		this.head.addChild(this.lowerCrest);
		this.tail2.addChild(this.rightToeClaw2);
		this.upperBody.addChild(this.leftUpperArm);
		this.leftLowerArm.addChild(this.leftLowerArmWing);
		this.head.addChild(this.upperCrest);
		this.leftFoot.addChild(this.leftToeClaw1);
		this.tail1.addChild(this.tail2);
		this.lowerBody.addChild(this.upperBody);
		this.leftLowerArm.addChild(this.leftLowerArmWing2);
		this.rightLowerArm.addChild(this.rightLowerArmWing);
		this.tail2.addChild(this.tailFeather3);
		this.upperBody.addChild(this.neck);
		this.updateDefaultPose();
		animator = ModelAnimator.create();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.leftThigh.render(f5);
		this.lowerBody.render(f5);
		this.rightThigh.render(f5);
		this.lowerJaw.setScale(0.99F, 0.99F, 0.99F);
	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		EntityPrehistoric prehistoric = (EntityPrehistoric) entity;
		animator.update(entity);
		blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
		this.resetToDefaultPose();
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(prehistoric.SPEAK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, 15, 0, 0);
		ModelUtils.rotate(animator, head, -20, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 24, 0, 0);
        animator.endKeyframe();
		animator.resetKeyframe(10);
		animator.setAnimation(EntityVelociraptor.ANIMATION_JUMPAT);
		animator.startKeyframe(10);
		animator.move(leftThigh, 0, 3.2F, -0.5F);
		animator.move(rightThigh, 0, 3.2F, -0.5F);
		animator.move(lowerBody, 0, 5.2F, -0.5F);
		ModelUtils.rotate(animator, lowerBody, 15, 0, 0);
		ModelUtils.rotate(animator, rightLeg, -30, 0, 0);
		ModelUtils.rotate(animator, leftLeg, -30, 0, 0);
		ModelUtils.rotate(animator, rightFoot, 30, 0, 0);
		ModelUtils.rotate(animator, leftFoot, 30, 0, 0);
		ModelUtils.rotate(animator, leftUpperArm, 0, 0, -50);
		ModelUtils.rotate(animator, rightUpperArm, 0, 0, 50);
		ModelUtils.rotate(animator, head, -20, 0, 0);
		animator.endKeyframe();
		animator.setStaticKeyframe(5);
		animator.startKeyframe(5);
		animator.move(leftThigh, 0, -6F, 0F);
		animator.move(rightThigh, 0, -6F, 0F);
		animator.move(lowerBody, 0, -10F, 0F);
		ModelUtils.rotate(animator, lowerBody, -25, 0, 0);
		ModelUtils.rotate(animator, rightThigh, -35, 0, 0);
		ModelUtils.rotate(animator, leftThigh, -35, 0, 0);
		ModelUtils.rotate(animator, rightLeg, -30, 0, 0);
		ModelUtils.rotate(animator, leftLeg, -30, 0, 0);
		ModelUtils.rotate(animator, rightFoot, -55, 0, 0);
		ModelUtils.rotate(animator, leftFoot, -55, 0, 0);
		ModelUtils.rotate(animator, leftUpperArm, 0, 0, -50);
		ModelUtils.rotate(animator, rightUpperArm, 0, 0, 50);
		animator.endKeyframe();
		animator.setStaticKeyframe(5);
		animator.resetKeyframe(5);
		animator.setAnimation(prehistoric.ATTACK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -20, 0, 0);
		ModelUtils.rotate(animator, head, 20, 0, 0);
		animator.move(head, 0, 0, -2);
		ModelUtils.rotate(animator, lowerJaw, 25, 0, 0);
		animator.endKeyframe();
		animator.startKeyframe(5);
		ModelUtils.rotate(animator, neck, 6, 0, 0);
		ModelUtils.rotate(animator, head, -14, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 1, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(5);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		AdvancedModelRenderer[] tailParts = {this.tail1, this.tail2, this.tail3};
		AdvancedModelRenderer[] neckParts = {this.neck, this.head};
		AdvancedModelRenderer[] leftArmParts = {this.leftUpperArm, this.leftLowerArm};
		AdvancedModelRenderer[] rightArmParts = {this.rightUpperArm, this.rightLowerArm};
		if (((EntityPrehistoric) entity).isSkeleton() || ((EntityPrehistoric) entity).isAIDisabled()) {
			return;
		}
		ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
		ModelUtils.faceTargetMod(head, f3, f4, 0.5F);

		float speed = 0.1F;
		float speed2 = 0.7F;
		float degree = 0.5F;
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sitProgress;
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail2, sitProgress, 0.03490658503988659F, 0.0F, 0.0F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -0.091106186954104F, 0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(upperJaw, sitProgress, -0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(upperBody, sitProgress, 0.19338248112097173F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail3, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.22759093446006054F, 0.0F, 0.0F);
			sitAnimationRotationPrev(head, sitProgress, 1.593485607070823F, 0.0F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -1.3203415791337103F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 1.1383037381507017F, 0.22759093446006054F, -0.4553564018453205F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.27314402793711257F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftUpperArm, sitProgress, 1.1383037381507017F, -0.22759093446006054F, 0.4553564018453205F);
			sitAnimationPos(lowerBody, sitProgress, 0F, 14.40F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 18.60F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 18.640F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).sleepProgress;
			sitAnimationRotationPrev(upperBody, sitProgress, 0.19338248112097173F, 0.22759093446006054F, 0.0F);
			sitAnimationRotationPrev(leftUpperArm, sitProgress, 1.3203415791337103F, -0.22759093446006054F, 0.4553564018453205F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 1.1383037381507017F, 0.22759093446006054F, -0.4553564018453205F);
			sitAnimationRotationPrev(head, sitProgress, 1.6668041679331349F, 0.0F, 0.045553093477052F);
			sitAnimationRotationPrev(tail2, sitProgress, 0.03490658503988659F, -0.36425021489121656F, 0.0F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.22759093446006054F, 0.0F, 0.0F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.27314402793711257F, -0.31869712141416456F, -0.18203784098300857F);
			sitAnimationRotationPrev(upperJaw, sitProgress, -0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail3, sitProgress, 0.27314402793711257F, -0.36425021489121656F, -0.091106186954104F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.136659280431156F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -0.091106186954104F, 0.0F, 0.0F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -1.5025539530419183F, 0.6829473363053812F, 0.0F);
			sitAnimationPos(lowerBody, sitProgress, 0F, 14.40F - ModelUtils.getDefaultPositionY(lowerBody), 0F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 18.60F - ModelUtils.getDefaultPositionY(rightThigh), 0F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 18.60F - ModelUtils.getDefaultPositionY(leftThigh), 0F);
		}
		{
			float sitProgress = ((EntityPrehistoric) (entity)).climbProgress;
			sitAnimationRotationPrev(upperBody, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightFoot, sitProgress, -0.22759093446006054F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLeg, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail2, sitProgress, -0.136659280431156F, 0.0F, 0.0F);
			sitAnimationRotationPrev(leftFoot, sitProgress, -0.18203784098300857F, -0.0F, 0.0F);
			sitAnimationRotationPrev(leftLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(tail1, sitProgress, -0.27314402793711257F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightLowerArm, sitProgress, 0.091106186954104F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerJaw, sitProgress, -0.22759093446006054F, 0.0F, 0.0F);
			sitAnimationRotationPrev(leftThigh, sitProgress, -1.0927506446736497F, 0.0F, 0.0F);
			sitAnimationRotationPrev(neck, sitProgress, -0.18203784098300857F, -0.0F, 0.0F);
			sitAnimationRotationPrev(lowerBody, sitProgress, -1.4114477660878142F, 0.0F, 0.0F);
			sitAnimationRotationPrev(leftUpperArm, sitProgress, 0.7285004297824331F, -0.22759093446006054F, 0.7285004297824331F);
			sitAnimationRotationPrev(tail3, sitProgress, 0.045553093477052F, -0.0F, 0.0F);
			sitAnimationRotationPrev(rightThigh, sitProgress, -1.0927506446736497F, -0.0F, 0.0F);
			sitAnimationRotationPrev(head, sitProgress, 0.5918411493512771F, 0.0F, 0.0F);
			sitAnimationRotationPrev(rightUpperArm, sitProgress, 0.7285004297824331F, 0.22759093446006054F, -0.7285004297824331F);
			sitAnimationRotationPrev(leftLeg, sitProgress, 0.045553093477052F, -0.0F, 0.0F);

			sitAnimationPos(lowerBody, sitProgress, 0F, 8.9F - ModelUtils.getDefaultPositionY(lowerBody), -0.4F);
			sitAnimationPos(rightThigh, sitProgress, 0F, 14F - ModelUtils.getDefaultPositionY(rightThigh), -6.7F);
			sitAnimationPos(leftThigh, sitProgress, 0F, 14F - ModelUtils.getDefaultPositionY(leftThigh), -6.7F);
			if (sitProgress >= 10) {
				speed2 = 0.4F;
				this.walk(leftThigh, speed2, -0.8F, false, 0F, 0F, entity.ticksExisted, 1);
				this.walk(leftLeg, speed2, 0.2F, true, 0F, -0.6F, entity.ticksExisted, 1);
				this.walk(leftFoot, speed2, -0.4F, true, -0.5F, -0.2F, entity.ticksExisted, 1);
				this.walk(rightThigh, speed2, -0.8F, false, 0F, 0F, entity.ticksExisted, 1);
				this.walk(rightLeg, speed2, 0.2F, true, 0F, -0.6F, entity.ticksExisted, 1);
				this.walk(rightFoot, speed2, -0.4F, true, -0.5F, -0.2F, entity.ticksExisted, 1);
				this.walk(rightUpperArm, speed2, 0.6F, true, -0.5F, 0F, entity.ticksExisted, 1);
				this.walk(leftUpperArm, speed2, 0.6F, true, -0.5F, 0F, entity.ticksExisted, 1);
				this.chainWave(neckParts, speed, -0.3F, 5, entity.ticksExisted, 1);
			}
		}
		this.bob(lowerBody, speed, degree * 0.7F, false, entity.ticksExisted, 1);
		this.walk(upperBody, speed, degree * 0.1F, false, 0, 0, entity.ticksExisted, 1);
		this.chainWave(tailParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(leftArmParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(rightArmParts, speed, degree * 0.05F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed, degree * 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed2, degree * 0.25F, -3, f, f1);
		this.chainWave(neckParts, speed, degree * 0.15F, 3, entity.ticksExisted, 1);
		this.walk(leftThigh, speed2, 0.6F, false, 0F, 0.4F, f, f1);
		this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
		this.walk(leftFoot, speed2, -0.6F, true, 2.5F, -0.4F, f, f1);
		this.walk(rightThigh, speed2, 0.6F, true, 0F, -0.4F, f, f1);
		this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
		this.walk(rightFoot, speed2, -0.6F, false, 2.5F, 0.4F, f, f1);
		this.chainWave(neckParts, speed2, degree * 0.5F, 4, f, f1);
		this.chainWave(tailParts, speed2, degree * 0.3F, -4, f, f1);

		if (((EntityVelociraptor) entity).getAnimation() != ((EntityVelociraptor) entity).ATTACK_ANIMATION && entity.getRidingEntity() != null && entity.getRidingEntity() instanceof EntityLivingBase) {
			ModelUtils.setRotateAngleAlt(lowerBody, -15, 0, 0);
			ModelUtils.setRotateAngleAlt(leftLeg, 20, 0, 0);
			ModelUtils.setRotateAngleAlt(leftFoot, -20, 0, 0);
			ModelUtils.setRotateAngleAlt(rightLeg, 20, 0, 0);
			ModelUtils.setRotateAngleAlt(rightFoot, -20, 0, 0);
			ModelUtils.setRotateAngleAlt(leftUpperArm, 0, 0, 50);
			ModelUtils.setRotateAngleAlt(rightUpperArm, 0, 0, -50);
			ModelUtils.setRotateAngleAlt(neck, 25, 0, 0);
			ModelUtils.setRotateAngleAlt(head, 70, 0, 0);
			EntityVelociraptor dino = (EntityVelociraptor) entity;
			float speed3 = 0.5F;
			this.walk(lowerJaw, speed3, -0.3F, true, 0.5F, -0.3F, entity.ticksExisted, 1);
			this.walk(neck, speed3, 0.4F, false, 0F, 0.4F, entity.ticksExisted, 1);
			this.walk(head, speed3, 0.4F, true, 0F, 0.2F, entity.ticksExisted, 1);
			this.flap(leftUpperArm, 0.8F, -0.6F, true, 0.3F, -0.2F, entity.ticksExisted, 1);
			this.flap(rightUpperArm, 0.8F, -0.6F, false, -0.3F, -0.2F, entity.ticksExisted, 1);
		}
		((EntityPrehistoric) entity).chainBuffer.applyChainSwingBuffer((AdvancedModelRenderer[]) tailParts);
		// ((ChainBuffer)((EntityVelociraptor)entity).tailBuffer).applyChainSwingBuffer(tailParts);

	}

}
